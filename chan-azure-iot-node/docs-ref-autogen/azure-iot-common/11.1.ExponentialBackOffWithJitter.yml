### YamlMime:UniversalReference
items:
  - uid: azure-iot-common - v1.11.1.ExponentialBackOffWithJitter
    name: ExponentialBackOffWithJitter
    fullName: ExponentialBackOffWithJitter
    children:
      - azure-iot-common - v1.11.1.ExponentialBackOffWithJitter.constructor
      - >-
        azure-iot-common -
        v1.11.1.ExponentialBackOffWithJitter.immediateFirstRetry
      - azure-iot-common - v1.11.1.ExponentialBackOffWithJitter.nextRetryTimeout
      - azure-iot-common - v1.11.1.ExponentialBackOffWithJitter.normalParameters
      - azure-iot-common - v1.11.1.ExponentialBackOffWithJitter.shouldRetry
      - >-
        azure-iot-common -
        v1.11.1.ExponentialBackOffWithJitter.throttledParameters
    langs:
      - typeScript
    type: class
    summary: >-
      Implements an Exponential Backoff with Jitter retry strategy.

      The function to calculate the next interval is the following (x is the xth
      retry):

      F(x) = min(Cmin+ (2^(x-1)-1) * rand(C * (1 â€“ Jd), C*(1-Ju)), Cmax)
    package: azure-iot-common - v1
  - uid: azure-iot-common - v1.11.1.ExponentialBackOffWithJitter.constructor
    name: 'ExponentialBackOffWithJitter(boolean, ErrorFilter)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Initializes a new instance of the
      <xref:azure-iot-common.ExponentialBackOffWithJitter> class.
    syntax:
      content: >-
        new ExponentialBackOffWithJitter(immediateFirstRetry?: boolean,
        errorFilter?: ErrorFilter)
      parameters:
        - id: immediateFirstRetry
          type:
            - boolean
          description: >
            boolean indicating whether the first retry should be immediate
            (default) or wait the first interval (c value).
          optional: true
        - id: errorFilter
          type:
            - ErrorFilter
          description: ''
          optional: true
    package: azure-iot-common - v1
  - uid: >-
      azure-iot-common -
      v1.11.1.ExponentialBackOffWithJitter.immediateFirstRetry
    name: immediateFirstRetry
    fullName: immediateFirstRetry
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Boolean indicating whether the first retry should be immediate (if set to
      true) or after the normalParameters.c delay (if set to false).
    syntax:
      content: 'immediateFirstRetry: boolean'
      return:
        type:
          - boolean
        description: ''
    package: azure-iot-common - v1
  - uid: azure-iot-common - v1.11.1.ExponentialBackOffWithJitter.nextRetryTimeout
    name: 'nextRetryTimeout(number, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Computes the interval to wait before retrying at each new retry tentative.
    syntax:
      content: 'function nextRetryTimeout(retryCount: number, isThrottled: boolean)'
      parameters:
        - id: retryCount
          type:
            - number
          description: Current retry tentative.
        - id: isThrottled
          type:
            - boolean
          description: >-
            Boolean indicating whether the Azure IoT hub is throttling
            operations.
      return:
        type:
          - number
        description: The time to wait before attempting a retry in milliseconds.
    package: azure-iot-common - v1
  - uid: azure-iot-common - v1.11.1.ExponentialBackOffWithJitter.normalParameters
    name: normalParameters
    fullName: normalParameters
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Retry parameters used to calculate the delay between each retry in normal
      situations (ie. not throttled).
    syntax:
      content: 'normalParameters: ExponentialBackoffWithJitterParameters'
      return:
        type:
          - azure-iot-common - v1.11.1.ExponentialBackoffWithJitterParameters
        description: ''
    package: azure-iot-common - v1
  - uid: azure-iot-common - v1.11.1.ExponentialBackOffWithJitter.shouldRetry
    name: shouldRetry(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Based on the error passed as argument, determines if an error is transient
      and if the operation should be retried or not.
    syntax:
      content: 'function shouldRetry(error: Error)'
      parameters:
        - id: error
          type:
            - Error
          description: The error encountered by the operation.
      return:
        type:
          - boolean
        description: Whether the operation should be retried or not.
    package: azure-iot-common - v1
  - uid: >-
      azure-iot-common -
      v1.11.1.ExponentialBackOffWithJitter.throttledParameters
    name: throttledParameters
    fullName: throttledParameters
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Retry parameters used to calculate the delay between each retry in
      throttled situations.
    syntax:
      content: 'throttledParameters: ExponentialBackoffWithJitterParameters'
      return:
        type:
          - azure-iot-common - v1.11.1.ExponentialBackoffWithJitterParameters
        description: ''
    package: azure-iot-common - v1
references:
  - uid: azure-iot-common - v1.11.1.ExponentialBackoffWithJitterParameters
    name: ExponentialBackoffWithJitterParameters
    spec.typeScript:
      - name: ExponentialBackoffWithJitterParameters
        fullName: ExponentialBackoffWithJitterParameters
        uid: azure-iot-common - v1.11.1.ExponentialBackoffWithJitterParameters
