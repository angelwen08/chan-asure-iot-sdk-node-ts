### YamlMime:UniversalReference
items:
  - uid: azure-iothub.ServiceReceiver
    name: ServiceReceiver
    fullName: ServiceReceiver
    children:
      - azure-iothub.ServiceReceiver.abandon_1
      - azure-iothub.ServiceReceiver.abandon
      - azure-iothub.ServiceReceiver.addListener
      - azure-iothub.ServiceReceiver.complete_1
      - azure-iothub.ServiceReceiver.complete
      - azure-iothub.ServiceReceiver.defaultMaxListeners
      - azure-iothub.ServiceReceiver.detach_1
      - azure-iothub.ServiceReceiver.detach
      - azure-iothub.ServiceReceiver.emit
      - azure-iothub.ServiceReceiver.eventNames
      - azure-iothub.ServiceReceiver.forceDetach
      - azure-iothub.ServiceReceiver.getMaxListeners
      - azure-iothub.ServiceReceiver.listenerCount
      - azure-iothub.ServiceReceiver.listenerCount
      - azure-iothub.ServiceReceiver.listeners
      - azure-iothub.ServiceReceiver.on
      - azure-iothub.ServiceReceiver.once
      - azure-iothub.ServiceReceiver.prependListener
      - azure-iothub.ServiceReceiver.prependOnceListener
      - azure-iothub.ServiceReceiver.reject_1
      - azure-iothub.ServiceReceiver.reject
      - azure-iothub.ServiceReceiver.removeAllListeners
      - azure-iothub.ServiceReceiver.removeListener
      - azure-iothub.ServiceReceiver.constructor
      - azure-iothub.ServiceReceiver.setMaxListeners
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: EventEmitter
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.abandon_1
    name: abandon(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageAbandoned>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.abandon
    name: 'abandon(Message, Callback<MessageAbandoned>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message, done: Callback<MessageAbandoned>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: done
          type:
            - Callback<MessageAbandoned>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.addListener
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.complete_1
    name: complete(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageCompleted>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.complete
    name: 'complete(Message, Callback<MessageCompleted>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message, done: Callback<MessageCompleted>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: done
          type:
            - Callback<MessageCompleted>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.defaultMaxListeners
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.detach_1
    name: detach()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function detach()
      parameters: []
      return:
        type:
          - Promise<void>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.detach
    name: detach(ErrorCallback)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detach(callback: ErrorCallback)'
      parameters:
        - id: callback
          type:
            - ErrorCallback
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.forceDetach
    name: forceDetach(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceDetach(err?: Error)'
      parameters:
        - id: err
          type:
            - Error
          description: ''
          optional: true
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.listenerCount
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - EventEmitter
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.on
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.once
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.prependListener
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.prependOnceListener
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.reject_1
    name: reject(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageRejected>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.reject
    name: 'reject(Message, Callback<MessageRejected>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message, done: Callback<MessageRejected>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: done
          type:
            - Callback<MessageRejected>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.constructor
    name: ServiceReceiver(ReceiverLink)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ServiceReceiver(receiver: ReceiverLink)'
      parameters:
        - id: receiver
          type:
            - ReceiverLink
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iothub
