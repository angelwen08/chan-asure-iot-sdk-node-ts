### YamlMime:UniversalReference
items:
  - uid: azure-iothub.ServiceReceiver
    name: ServiceReceiver
    fullName: ServiceReceiver
    children:
      - azure-iothub.ServiceReceiver.abandon_1
      - azure-iothub.ServiceReceiver.abandon
      - azure-iothub.ServiceReceiver.complete_1
      - azure-iothub.ServiceReceiver.complete
      - azure-iothub.ServiceReceiver.detach_1
      - azure-iothub.ServiceReceiver.detach
      - azure-iothub.ServiceReceiver.forceDetach
      - azure-iothub.ServiceReceiver.reject_1
      - azure-iothub.ServiceReceiver.reject
      - azure-iothub.ServiceReceiver.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: EventEmitter
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.abandon_1
    name: abandon(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageAbandoned>
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.abandon
    name: 'abandon(Message, Callback<MessageAbandoned>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message, done: Callback<MessageAbandoned>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: done
          type:
            - Callback<MessageAbandoned>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.complete_1
    name: complete(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageCompleted>
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.complete
    name: 'complete(Message, Callback<MessageCompleted>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message, done: Callback<MessageCompleted>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: done
          type:
            - Callback<MessageCompleted>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.detach_1
    name: detach()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function detach()
      parameters: []
      return:
        type:
          - Promise<void>
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.detach
    name: detach(ErrorCallback)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detach(callback: ErrorCallback)'
      parameters:
        - id: callback
          type:
            - ErrorCallback
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.forceDetach
    name: forceDetach(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceDetach(err?: Error)'
      parameters:
        - id: err
          type:
            - Error
          description: ''
          optional: true
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.reject_1
    name: reject(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageRejected>
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.reject
    name: 'reject(Message, Callback<MessageRejected>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message, done: Callback<MessageRejected>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: done
          type:
            - Callback<MessageRejected>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.constructor
    name: ServiceReceiver(ReceiverLink)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ServiceReceiver(receiver: ReceiverLink)'
      parameters:
        - id: receiver
          type:
            - ReceiverLink
          description: ''
    package: azure-iothub
