### YamlMime:UniversalReference
items:
  - uid: azure-iothub.Registry
    name: Registry
    fullName: Registry
    children:
      - azure-iothub.Registry.addConfiguration_1
      - azure-iothub.Registry.addConfiguration
      - azure-iothub.Registry.addDevices_1
      - azure-iothub.Registry.addDevices
      - azure-iothub.Registry.addModule_1
      - azure-iothub.Registry.addModule
      - azure-iothub.Registry.applyConfigurationContentOnDevice_1
      - azure-iothub.Registry.applyConfigurationContentOnDevice
      - azure-iothub.Registry.BulkRegistryOperationResult
      - azure-iothub.Registry.BulkRegistryOperationType
      - azure-iothub.Registry.cancelJob_1
      - azure-iothub.Registry.cancelJob
      - azure-iothub.Registry.create_1
      - azure-iothub.Registry.create
      - azure-iothub.Registry.createQuery
      - azure-iothub.Registry.delete_1
      - azure-iothub.Registry.delete
      - azure-iothub.Registry.DeviceDescription
      - azure-iothub.Registry.DeviceRegistryOperationError
      - azure-iothub.Registry.exportDevicesToBlob_1
      - azure-iothub.Registry.exportDevicesToBlob
      - azure-iothub.Registry.fromConnectionString
      - azure-iothub.Registry.fromSharedAccessSignature
      - azure-iothub.Registry.get_1
      - azure-iothub.Registry.get
      - azure-iothub.Registry.getConfiguration_1
      - azure-iothub.Registry.getConfiguration
      - azure-iothub.Registry.getConfigurations_1
      - azure-iothub.Registry.getConfigurations
      - azure-iothub.Registry.getJob_1
      - azure-iothub.Registry.getJob
      - azure-iothub.Registry.getModule_1
      - azure-iothub.Registry.getModule
      - azure-iothub.Registry.getModulesOnDevice_1
      - azure-iothub.Registry.getModulesOnDevice
      - azure-iothub.Registry.getModuleTwin_1
      - azure-iothub.Registry.getModuleTwin
      - azure-iothub.Registry.getRegistryStatistics_1
      - azure-iothub.Registry.getRegistryStatistics
      - azure-iothub.Registry.getTwin_1
      - azure-iothub.Registry.getTwin
      - azure-iothub.Registry.importDevicesFromBlob_1
      - azure-iothub.Registry.importDevicesFromBlob
      - azure-iothub.Registry.JobCallback
      - azure-iothub.Registry.JobStatus
      - azure-iothub.Registry.list_1
      - azure-iothub.Registry.list
      - azure-iothub.Registry.listJobs_1
      - azure-iothub.Registry.listJobs
      - azure-iothub.Registry.QueryDescription
      - azure-iothub.Registry.RegistryStatistics
      - azure-iothub.Registry.removeConfiguration_1
      - azure-iothub.Registry.removeConfiguration
      - azure-iothub.Registry.removeDevices_1
      - azure-iothub.Registry.removeDevices
      - azure-iothub.Registry.removeModule_3
      - azure-iothub.Registry.removeModule_2
      - azure-iothub.Registry.removeModule
      - azure-iothub.Registry.removeModule_1
      - azure-iothub.Registry.ResponseCallback
      - azure-iothub.Registry.TransportConfig
      - azure-iothub.Registry.update_1
      - azure-iothub.Registry.update
      - azure-iothub.Registry.updateConfiguration_3
      - azure-iothub.Registry.updateConfiguration_2
      - azure-iothub.Registry.updateConfiguration_1
      - azure-iothub.Registry.updateConfiguration
      - azure-iothub.Registry.updateDevices_1
      - azure-iothub.Registry.updateDevices
      - azure-iothub.Registry.updateModule_3
      - azure-iothub.Registry.updateModule_2
      - azure-iothub.Registry.updateModule_1
      - azure-iothub.Registry.updateModule
      - azure-iothub.Registry.updateModuleTwin_1
      - azure-iothub.Registry.updateModuleTwin
      - azure-iothub.Registry.updateTwin_1
      - azure-iothub.Registry.updateTwin
    langs:
      - typeScript
    type: class
    summary: >
      The Registry class provides access to the IoT Hub device identity service.

      Users of the SDK should instantiate this class with one of the factory
      methods:

      [fromConnectionString](xref:azure-iothub.Registry.fromConnectionString) or
      [fromSharedAccessSignature](xref:azure-iothub.Registry.fromSharedAccessSignature).

      The protocol used for device identity registry operations is HTTPS.
    package: azure-iothub
  - uid: azure-iothub.Registry.addConfiguration_1
    name: addConfiguration(Configuration)
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a configuration to an IoT hub.
    syntax:
      content: 'function addConfiguration(configuration: Configuration)'
      parameters:
        - id: configuration
          type:
            - azure-iothub.Configuration
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.addConfiguration
    name: 'addConfiguration(Configuration, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a configuration to an IoT hub.
    syntax:
      content: >-
        function addConfiguration(configuration: Configuration, done:
        HttpResponseCallback<any>)
      parameters:
        - id: configuration
          type:
            - azure-iothub.Configuration
          description: |-
            An object of type module:azure-iothub.Configuration
                                                 to add to the hub
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.addDevices_1
    name: 'addDevices(DeviceDescription[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds an array of devices.
    syntax:
      content: 'function addDevices(devices: DeviceDescription[])'
      parameters:
        - id: devices
          type:
            - 'azure-iothub.Registry.DeviceDescription[]'
          description: ''
      return:
        type:
          - >-
            Promise<ResultWithHttpResponse<azure-iothub.Registry.BulkRegistryOperationResult>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.addDevices
    name: >-
      addDevices(DeviceDescription[],
      HttpResponseCallback<BulkRegistryOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds an array of devices.
    syntax:
      content: >-
        function addDevices(devices: DeviceDescription[], done:
        HttpResponseCallback<BulkRegistryOperationResult>)
      parameters:
        - id: devices
          type:
            - 'azure-iothub.Registry.DeviceDescription[]'
          description: |-
            An array of objects which must include a `deviceId`
                                           property whose value is a valid device
                                           identifier.
        - id: done
          type:
            - >-
              HttpResponseCallback<azure-iothub.Registry.BulkRegistryOperationResult>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.addModule_1
    name: addModule(Module)
    children: []
    type: method
    langs:
      - typeScript
    summary: Add the given module to the registry.
    syntax:
      content: 'function addModule(module: Module)'
      parameters:
        - id: module
          type:
            - azure-iothub.Module
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.addModule
    name: 'addModule(Module, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add the given module to the registry.
    syntax:
      content: 'function addModule(module: Module, done: HttpResponseCallback<any>)'
      parameters:
        - id: module
          type:
            - azure-iothub.Module
          description: Module object to add to the registry.
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.applyConfigurationContentOnDevice_1
    name: 'applyConfigurationContentOnDevice(string, ConfigurationContent)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Apply the given configuration to a device on an IoT Hub
    syntax:
      content: >-
        function applyConfigurationContentOnDevice(deviceId: string, content:
        ConfigurationContent)
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: content
          type:
            - azure-iothub.ConfigurationContent
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.applyConfigurationContentOnDevice
    name: >-
      applyConfigurationContentOnDevice(string, ConfigurationContent,
      HttpResponseCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Apply the given configuration to a device on an IoT Hub
    syntax:
      content: >-
        function applyConfigurationContentOnDevice(deviceId: string, content:
        ConfigurationContent, done: HttpResponseCallback<any>)
      parameters:
        - id: deviceId
          type:
            - string
          description: ID of the device to apply the configuration to
        - id: content
          type:
            - azure-iothub.ConfigurationContent
          description: The Configuration to apply
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.cancelJob_1
    name: cancelJob(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancel a bulk import/export job.
    syntax:
      content: 'function cancelJob(jobId: string)'
      parameters:
        - id: jobId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<azure-iothub.Registry.JobStatus>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.cancelJob
    name: 'cancelJob(string, Callback<JobStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancel a bulk import/export job.
    syntax:
      content: 'function cancelJob(jobId: string, done: Callback<JobStatus>)'
      parameters:
        - id: jobId
          type:
            - string
          description: >-
            The identifier of the job for which the user wants to get status
            information.
        - id: done
          type:
            - Callback<azure-iothub.Registry.JobStatus>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.create_1
    name: create(DeviceDescription)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new device identity on an IoT hub.
    syntax:
      content: 'function create(deviceInfo: DeviceDescription)'
      parameters:
        - id: deviceInfo
          type:
            - azure-iothub.Registry.DeviceDescription
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<azure-iothub.Device>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.create
    name: 'create(DeviceDescription, HttpResponseCallback<Device>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new device identity on an IoT hub.
    syntax:
      content: >-
        function create(deviceInfo: DeviceDescription, done:
        HttpResponseCallback<Device>)
      parameters:
        - id: deviceInfo
          type:
            - azure-iothub.Registry.DeviceDescription
          description: |-
            The object must include a `deviceId` property
                                           with a valid device identifier.
        - id: done
          type:
            - HttpResponseCallback<azure-iothub.Device>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.createQuery
    name: 'createQuery(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a query that can be run on the IoT Hub instance to find
      information about devices or jobs.
    syntax:
      content: 'function createQuery(sqlQuery: string, pageSize?: number)'
      parameters:
        - id: sqlQuery
          type:
            - string
          description: The query written as an SQL string.
        - id: pageSize
          type:
            - number
          description: >
            The desired number of results per page (optional. default: 1000,
            max: 10000).
          optional: true
      return:
        type:
          - azure-iothub.Query
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.delete_1
    name: delete(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes an existing device identity from an IoT hub.
    syntax:
      content: 'function delete(deviceId: string)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.delete
    name: 'delete(string, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes an existing device identity from an IoT hub.
    syntax:
      content: 'function delete(deviceId: string, done: HttpResponseCallback<any>)'
      parameters:
        - id: deviceId
          type:
            - string
          description: The identifier of an existing device identity.
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.exportDevicesToBlob_1
    name: 'exportDevicesToBlob(string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Export devices to a blob in a bulk job.
    syntax:
      content: >-
        function exportDevicesToBlob(outputBlobContainerUri: string,
        excludeKeys: boolean)
      parameters:
        - id: outputBlobContainerUri
          type:
            - string
          description: ''
        - id: excludeKeys
          type:
            - boolean
          description: ''
      return:
        type:
          - Promise<azure-iothub.Registry.JobStatus>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.exportDevicesToBlob
    name: 'exportDevicesToBlob(string, boolean, Callback<JobStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Export devices to a blob in a bulk job.
    syntax:
      content: >-
        function exportDevicesToBlob(outputBlobContainerUri: string,
        excludeKeys: boolean, done: Callback<JobStatus>)
      parameters:
        - id: outputBlobContainerUri
          type:
            - string
          description: >-
            The URI to a container where a blob will be created with logs of the
            export process.
        - id: excludeKeys
          type:
            - boolean
          description: >-
            Boolean indicating whether security keys should be excluded from the
            exported data.
        - id: done
          type:
            - Callback<azure-iothub.Registry.JobStatus>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.fromConnectionString
    name: fromConnectionString(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Constructs a Registry object from the given connection string.
    syntax:
      content: 'static function fromConnectionString(value: string)'
      parameters:
        - id: value
          type:
            - string
          description: |-
            A connection string which encapsulates the
                                         appropriate (read and/or write) Registry
                                         permissions.
      return:
        type:
          - azure-iothub.Registry
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.fromSharedAccessSignature
    name: fromSharedAccessSignature(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Constructs a Registry object from the given shared access signature.
    syntax:
      content: 'static function fromSharedAccessSignature(value: string)'
      parameters:
        - id: value
          type:
            - string
          description: |-
            A shared access signature which encapsulates
                                         the appropriate (read and/or write) Registry
                                         permissions.
      return:
        type:
          - azure-iothub.Registry
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.get_1
    name: get(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Requests information about an existing device identity
                         on an IoT hub.
    syntax:
      content: 'function get(deviceId: string)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<azure-iothub.Device>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.get
    name: 'get(string, HttpResponseCallback<Device>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Requests information about an existing device identity
                         on an IoT hub.
    syntax:
      content: 'function get(deviceId: string, done: HttpResponseCallback<Device>)'
      parameters:
        - id: deviceId
          type:
            - string
          description: The identifier of an existing device identity.
        - id: done
          type:
            - HttpResponseCallback<azure-iothub.Device>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getConfiguration_1
    name: getConfiguration(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a single configuration from an IoT Hub
    syntax:
      content: 'function getConfiguration(configurationId: string)'
      parameters:
        - id: configurationId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<azure-iothub.Configuration>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getConfiguration
    name: 'getConfiguration(string, HttpResponseCallback<Configuration>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a single configuration from an IoT Hub
    syntax:
      content: >-
        function getConfiguration(configurationId: string, done:
        HttpResponseCallback<Configuration>)
      parameters:
        - id: configurationId
          type:
            - string
          description: The ID of the configuration you with to retrieve
        - id: done
          type:
            - HttpResponseCallback<azure-iothub.Configuration>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getConfigurations_1
    name: getConfigurations()
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all configurations on an IoT Hub
    syntax:
      content: function getConfigurations()
      parameters: []
      return:
        type:
          - 'Promise<ResultWithHttpResponse<azure-iothub.Configuration[]>>'
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getConfigurations
    name: 'getConfigurations(HttpResponseCallback<Configuration[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get all configurations on an IoT Hub
    syntax:
      content: 'function getConfigurations(done: HttpResponseCallback<Configuration[]>)'
      parameters:
        - id: done
          type:
            - 'HttpResponseCallback<azure-iothub.Configuration[]>'
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getJob_1
    name: getJob(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the status of a bulk import/export job.
    syntax:
      content: 'function getJob(jobId: string)'
      parameters:
        - id: jobId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<azure-iothub.Registry.JobStatus>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getJob
    name: 'getJob(string, Callback<JobStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the status of a bulk import/export job.
    syntax:
      content: 'function getJob(jobId: string, done: Callback<JobStatus>)'
      parameters:
        - id: jobId
          type:
            - string
          description: >-
            The identifier of the job for which the user wants to get status
            information.
        - id: done
          type:
            - Callback<azure-iothub.Registry.JobStatus>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getModule_1
    name: 'getModule(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a single module from a device on an IoT Hub
    syntax:
      content: 'function getModule(deviceId: string, moduleId: string)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<azure-iothub.Module>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getModule
    name: 'getModule(string, string, HttpResponseCallback<Module>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a single module from a device on an IoT Hub
    syntax:
      content: >-
        function getModule(deviceId: string, moduleId: string, done:
        HttpResponseCallback<Module>)
      parameters:
        - id: deviceId
          type:
            - string
          description: Device ID that owns the module.
        - id: moduleId
          type:
            - string
          description: Module ID to retrieve
        - id: done
          type:
            - HttpResponseCallback<azure-iothub.Module>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getModulesOnDevice_1
    name: getModulesOnDevice(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of all modules on an IoT Hub device
    syntax:
      content: 'function getModulesOnDevice(deviceId: string)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<ResultWithHttpResponse<azure-iothub.Module[]>>'
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getModulesOnDevice
    name: 'getModulesOnDevice(string, HttpResponseCallback<Module[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a list of all modules on an IoT Hub device
    syntax:
      content: >-
        function getModulesOnDevice(deviceId: string, done:
        HttpResponseCallback<Module[]>)
      parameters:
        - id: deviceId
          type:
            - string
          description: ID of the device we're getting modules for
        - id: done
          type:
            - 'HttpResponseCallback<azure-iothub.Module[]>'
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getModuleTwin_1
    name: 'getModuleTwin(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Module Twin of the module with the specified module identifier.
    syntax:
      content: 'function getModuleTwin(deviceId: string, moduleId: string)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<azure-iothub.Twin>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getModuleTwin
    name: 'getModuleTwin(string, string, HttpResponseCallback<Twin>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Module Twin of the module with the specified module identifier.
    syntax:
      content: >-
        function getModuleTwin(deviceId: string, moduleId: string, done:
        HttpResponseCallback<Twin>)
      parameters:
        - id: deviceId
          type:
            - string
          description: The device identifier.
        - id: moduleId
          type:
            - string
          description: The module identifier.
        - id: done
          type:
            - HttpResponseCallback<azure-iothub.Twin>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getRegistryStatistics_1
    name: getRegistryStatistics()
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets statistics about the devices in the device identity registry.
    syntax:
      content: function getRegistryStatistics()
      parameters: []
      return:
        type:
          - >-
            Promise<ResultWithHttpResponse<azure-iothub.Registry.RegistryStatistics>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getRegistryStatistics
    name: getRegistryStatistics(HttpResponseCallback<RegistryStatistics>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets statistics about the devices in the device identity registry.
    syntax:
      content: >-
        function getRegistryStatistics(done:
        HttpResponseCallback<RegistryStatistics>)
      parameters:
        - id: done
          type:
            - HttpResponseCallback<azure-iothub.Registry.RegistryStatistics>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getTwin_1
    name: getTwin(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Device Twin of the device with the specified device identifier.
    syntax:
      content: 'function getTwin(deviceId: string)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.getTwin
    name: 'getTwin(string, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Device Twin of the device with the specified device identifier.
    syntax:
      content: 'function getTwin(deviceId: string, done: HttpResponseCallback<any>)'
      parameters:
        - id: deviceId
          type:
            - string
          description: The device identifier.
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.importDevicesFromBlob_1
    name: 'importDevicesFromBlob(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Imports devices from a blob in bulk job.
    syntax:
      content: >-
        function importDevicesFromBlob(inputBlobContainerUri: string,
        outputBlobContainerUri: string)
      parameters:
        - id: inputBlobContainerUri
          type:
            - string
          description: ''
        - id: outputBlobContainerUri
          type:
            - string
          description: ''
      return:
        type:
          - Promise<azure-iothub.Registry.JobStatus>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.importDevicesFromBlob
    name: 'importDevicesFromBlob(string, string, Callback<JobStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Imports devices from a blob in bulk job.
    syntax:
      content: >-
        function importDevicesFromBlob(inputBlobContainerUri: string,
        outputBlobContainerUri: string, done: Callback<JobStatus>)
      parameters:
        - id: inputBlobContainerUri
          type:
            - string
          description: >-
            The URI to a container with a blob named 'devices.txt' containing a
            list of devices to import.
        - id: outputBlobContainerUri
          type:
            - string
          description: >-
            The URI to a container where a blob will be created with logs of the
            import process.
        - id: done
          type:
            - Callback<azure-iothub.Registry.JobStatus>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.list_1
    name: list()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Requests information about the first 1000 device
                         identities on an IoT hub.
    syntax:
      content: function list()
      parameters: []
      return:
        type:
          - 'Promise<ResultWithHttpResponse<azure-iothub.Device[]>>'
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.list
    name: 'list(HttpResponseCallback<Device[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Requests information about the first 1000 device
                         identities on an IoT hub.
    syntax:
      content: 'function list(done: HttpResponseCallback<Device[]>)'
      parameters:
        - id: done
          type:
            - 'HttpResponseCallback<azure-iothub.Device[]>'
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.listJobs_1
    name: listJobs()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List the last import/export jobs (including the active one, if any).'
    syntax:
      content: function listJobs()
      parameters: []
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.listJobs
    name: listJobs(HttpResponseCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'List the last import/export jobs (including the active one, if any).'
    syntax:
      content: 'function listJobs(done: HttpResponseCallback<any>)'
      parameters:
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.removeConfiguration_1
    name: removeConfiguration(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a configuration with the given ID from an IoT Hub
    syntax:
      content: 'function removeConfiguration(configurationId: string)'
      parameters:
        - id: configurationId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.removeConfiguration
    name: 'removeConfiguration(string, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a configuration with the given ID from an IoT Hub
    syntax:
      content: >-
        function removeConfiguration(configurationId: string, done:
        HttpResponseCallback<any>)
      parameters:
        - id: configurationId
          type:
            - string
          description: ID of the configuration to remove
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.removeDevices_1
    name: 'removeDevices(DeviceDescription[], boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an array of devices.
    syntax:
      content: >-
        function removeDevices(devices: DeviceDescription[], forceRemove:
        boolean)
      parameters:
        - id: devices
          type:
            - 'azure-iothub.Registry.DeviceDescription[]'
          description: ''
        - id: forceRemove
          type:
            - boolean
          description: ''
      return:
        type:
          - >-
            Promise<ResultWithHttpResponse<azure-iothub.Registry.BulkRegistryOperationResult>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.removeDevices
    name: >-
      removeDevices(DeviceDescription[], boolean,
      HttpResponseCallback<BulkRegistryOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an array of devices.
    syntax:
      content: >-
        function removeDevices(devices: DeviceDescription[], forceRemove:
        boolean, done: HttpResponseCallback<BulkRegistryOperationResult>)
      parameters:
        - id: devices
          type:
            - 'azure-iothub.Registry.DeviceDescription[]'
          description: |-
            An array of objects which must include a `deviceId`
                                           property whose value is a valid device
                                           identifier.
        - id: forceRemove
          type:
            - boolean
          description: |-
            if `forceRemove` is true then the device will be
                                           removed regardless of an etag.  Otherwise the etags
                                           must match.
        - id: done
          type:
            - >-
              HttpResponseCallback<azure-iothub.Registry.BulkRegistryOperationResult>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.removeModule_3
    name: removeModule(Module | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove the given module from the registry
    syntax:
      content: 'function removeModule(moduleOrDeviceId: Module | string)'
      parameters:
        - id: moduleOrDeviceId
          type:
            - azure-iothub.Module | string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.removeModule_2
    name: 'removeModule(Module | string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove the given module from the registry
    syntax:
      content: >-
        function removeModule(moduleOrDeviceId: Module | string, moduleId:
        string)
      parameters:
        - id: moduleOrDeviceId
          type:
            - azure-iothub.Module | string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.removeModule
    name: 'removeModule(Module, TripleValueCallback<any, any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove the given module from the registry
    syntax:
      content: >-
        function removeModule(module: Module, done: TripleValueCallback<any,
        any>)
      parameters:
        - id: module
          type:
            - azure-iothub.Module
          description: ''
        - id: done
          type:
            - 'TripleValueCallback<any, any>'
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.removeModule_1
    name: 'removeModule(string, string, TripleValueCallback<any, any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove the given module from the registry
    syntax:
      content: >-
        function removeModule(deviceId: string, moduleId: string, done:
        TripleValueCallback<any, any>)
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
        - id: done
          type:
            - 'TripleValueCallback<any, any>'
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.update_1
    name: update(DeviceDescription)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates an existing device identity on an IoT hub with
                         the given device information.
    syntax:
      content: 'function update(deviceInfo: DeviceDescription)'
      parameters:
        - id: deviceInfo
          type:
            - azure-iothub.Registry.DeviceDescription
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<azure-iothub.Device>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.update
    name: 'update(DeviceDescription, HttpResponseCallback<Device>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates an existing device identity on an IoT hub with
                         the given device information.
    syntax:
      content: >-
        function update(deviceInfo: DeviceDescription, done:
        HttpResponseCallback<Device>)
      parameters:
        - id: deviceInfo
          type:
            - azure-iothub.Registry.DeviceDescription
          description: |-
            An object which must include a `deviceId`
                                           property whose value is a valid device
                                           identifier.
        - id: done
          type:
            - HttpResponseCallback<azure-iothub.Device>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateConfiguration_3
    name: updateConfiguration(Configuration)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a configuration in an IoT hub
    syntax:
      content: 'function updateConfiguration(configuration: Configuration)'
      parameters:
        - id: configuration
          type:
            - azure-iothub.Configuration
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateConfiguration_2
    name: 'updateConfiguration(Configuration, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a configuration in an IoT hub
    syntax:
      content: >-
        function updateConfiguration(configuration: Configuration, forceUpdate:
        boolean)
      parameters:
        - id: configuration
          type:
            - azure-iothub.Configuration
          description: ''
        - id: forceUpdate
          type:
            - boolean
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateConfiguration_1
    name: 'updateConfiguration(Configuration, boolean, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a configuration in an IoT hub
    syntax:
      content: >-
        function updateConfiguration(configuration: Configuration, forceUpdate:
        boolean, done: HttpResponseCallback<any>)
      parameters:
        - id: configuration
          type:
            - azure-iothub.Configuration
          description: ''
        - id: forceUpdate
          type:
            - boolean
          description: ''
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateConfiguration
    name: 'updateConfiguration(Configuration, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a configuration in an IoT hub
    syntax:
      content: >-
        function updateConfiguration(configuration: Configuration, done:
        HttpResponseCallback<any>)
      parameters:
        - id: configuration
          type:
            - azure-iothub.Configuration
          description: |-
            An object of type module:azure-iothub.Configuration
                                                 to add to the hub
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateDevices_1
    name: 'updateDevices(DeviceDescription[], boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an array of devices.
    syntax:
      content: >-
        function updateDevices(devices: DeviceDescription[], forceUpdate:
        boolean)
      parameters:
        - id: devices
          type:
            - 'azure-iothub.Registry.DeviceDescription[]'
          description: ''
        - id: forceUpdate
          type:
            - boolean
          description: ''
      return:
        type:
          - >-
            Promise<ResultWithHttpResponse<azure-iothub.Registry.BulkRegistryOperationResult>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateDevices
    name: >-
      updateDevices(DeviceDescription[], boolean,
      HttpResponseCallback<BulkRegistryOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an array of devices.
    syntax:
      content: >-
        function updateDevices(devices: DeviceDescription[], forceUpdate:
        boolean, done: HttpResponseCallback<BulkRegistryOperationResult>)
      parameters:
        - id: devices
          type:
            - 'azure-iothub.Registry.DeviceDescription[]'
          description: |-
            An array of objects which must include a `deviceId`
                                           property whose value is a valid device
                                           identifier.
        - id: forceUpdate
          type:
            - boolean
          description: |-
            if `forceUpdate` is true then the device will be
                                           updated regardless of an etag.  Otherwise the etags
                                           must match.
        - id: done
          type:
            - >-
              HttpResponseCallback<azure-iothub.Registry.BulkRegistryOperationResult>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateModule_3
    name: updateModule(Module)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the given module object in the registry
    syntax:
      content: 'function updateModule(module: Module)'
      parameters:
        - id: module
          type:
            - azure-iothub.Module
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateModule_2
    name: 'updateModule(Module, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the given module object in the registry
    syntax:
      content: 'function updateModule(module: Module, forceUpdate: boolean)'
      parameters:
        - id: module
          type:
            - azure-iothub.Module
          description: ''
        - id: forceUpdate
          type:
            - boolean
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateModule_1
    name: 'updateModule(Module, boolean, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the given module object in the registry
    syntax:
      content: >-
        function updateModule(module: Module, forceUpdate: boolean, done:
        HttpResponseCallback<any>)
      parameters:
        - id: module
          type:
            - azure-iothub.Module
          description: ''
        - id: forceUpdate
          type:
            - boolean
          description: ''
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateModule
    name: 'updateModule(Module, TripleValueCallback<any, any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the given module object in the registry
    syntax:
      content: >-
        function updateModule(module: Module, done: TripleValueCallback<any,
        any>)
      parameters:
        - id: module
          type:
            - azure-iothub.Module
          description: Module object to update.
        - id: done
          type:
            - 'TripleValueCallback<any, any>'
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateModuleTwin_1
    name: 'updateModuleTwin(string, string, any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the Twin of a specific module with the given patch.
    syntax:
      content: >-
        function updateModuleTwin(deviceId: string, moduleId: string, patch:
        any, etag: string)
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
        - id: patch
          type:
            - any
          description: ''
        - id: etag
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateModuleTwin
    name: 'updateModuleTwin(string, string, any, string, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the Twin of a specific module with the given patch.
    syntax:
      content: >-
        function updateModuleTwin(deviceId: string, moduleId: string, patch:
        any, etag: string, done: HttpResponseCallback<any>)
      parameters:
        - id: deviceId
          type:
            - string
          description: The device identifier.
        - id: moduleId
          type:
            - string
          description: The module identifier
        - id: patch
          type:
            - any
          description: The desired properties and tags to patch the module twin with.
        - id: etag
          type:
            - string
          description: >-
            The latest etag for this module twin or '*' to force an update even
            if
                                             the module twin has been updated since the etag was obtained.
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateTwin_1
    name: 'updateTwin(string, any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the Device Twin of a specific device with the given patch.
    syntax:
      content: 'function updateTwin(deviceId: string, patch: any, etag: string)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: patch
          type:
            - any
          description: ''
        - id: etag
          type:
            - string
          description: ''
      return:
        type:
          - Promise<ResultWithHttpResponse<any>>
        description: ''
    package: azure-iothub
  - uid: azure-iothub.Registry.updateTwin
    name: 'updateTwin(string, any, string, HttpResponseCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the Device Twin of a specific device with the given patch.
    syntax:
      content: >-
        function updateTwin(deviceId: string, patch: any, etag: string, done:
        HttpResponseCallback<any>)
      parameters:
        - id: deviceId
          type:
            - string
          description: The device identifier.
        - id: patch
          type:
            - any
          description: The desired properties and tags to patch the device twin with.
        - id: etag
          type:
            - string
          description: >-
            The latest etag for this device twin or '*' to force an update even
            if
                                            the device twin has been updated since the etag was obtained.
        - id: done
          type:
            - HttpResponseCallback<any>
          description: ''
    package: azure-iothub
references:
  - uid: 'azure-iothub.Registry.DeviceRegistryOperationError[]'
    name: 'DeviceRegistryOperationError[]'
    spec.typeScript:
      - name: DeviceRegistryOperationError
        fullName: DeviceRegistryOperationError
        uid: azure-iothub.Registry.DeviceRegistryOperationError
      - name: '[]'
        fullName: '[]'
  - uid: azure-iothub.Device.Capabilities
    name: Capabilities
    spec.typeScript:
      - name: Capabilities
        fullName: Capabilities
        uid: azure-iothub.Device.Capabilities
  - uid: azure-iothub.Configuration
    name: Configuration
    spec.typeScript:
      - name: Configuration
        fullName: Configuration
        uid: azure-iothub.Configuration
  - uid: 'azure-iothub.Registry.DeviceDescription[]'
    name: 'DeviceDescription[]'
    spec.typeScript:
      - name: DeviceDescription
        fullName: DeviceDescription
        uid: azure-iothub.Registry.DeviceDescription
      - name: '[]'
        fullName: '[]'
  - uid: HttpResponseCallback<azure-iothub.Registry.BulkRegistryOperationResult>
    name: BulkRegistryOperationResult>
    spec.typeScript:
      - name: HttpResponseCallback<
        fullName: HttpResponseCallback<
      - name: BulkRegistryOperationResult
        fullName: BulkRegistryOperationResult
        uid: azure-iothub.Registry.BulkRegistryOperationResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<ResultWithHttpResponse<azure-iothub.Registry.BulkRegistryOperationResult>>
    name: BulkRegistryOperationResult>>
    spec.typeScript:
      - name: Promise<ResultWithHttpResponse<
        fullName: Promise<ResultWithHttpResponse<
      - name: BulkRegistryOperationResult
        fullName: BulkRegistryOperationResult
        uid: azure-iothub.Registry.BulkRegistryOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-iothub.Module
    name: Module
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: azure-iothub.Module
  - uid: azure-iothub.ConfigurationContent
    name: ConfigurationContent
    spec.typeScript:
      - name: ConfigurationContent
        fullName: ConfigurationContent
        uid: azure-iothub.ConfigurationContent
  - uid: Callback<azure-iothub.Registry.JobStatus>
    name: JobStatus>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: JobStatus
        fullName: JobStatus
        uid: azure-iothub.Registry.JobStatus
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iothub.Registry.JobStatus>
    name: JobStatus>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: JobStatus
        fullName: JobStatus
        uid: azure-iothub.Registry.JobStatus
      - name: '>'
        fullName: '>'
  - uid: azure-iothub.Registry.DeviceDescription
    name: DeviceDescription
    spec.typeScript:
      - name: DeviceDescription
        fullName: DeviceDescription
        uid: azure-iothub.Registry.DeviceDescription
  - uid: HttpResponseCallback<azure-iothub.Device>
    name: Device>
    spec.typeScript:
      - name: HttpResponseCallback<
        fullName: HttpResponseCallback<
      - name: Device
        fullName: Device
        uid: azure-iothub.Device
      - name: '>'
        fullName: '>'
  - uid: Promise<ResultWithHttpResponse<azure-iothub.Device>>
    name: Device>>
    spec.typeScript:
      - name: Promise<ResultWithHttpResponse<
        fullName: Promise<ResultWithHttpResponse<
      - name: Device
        fullName: Device
        uid: azure-iothub.Device
      - name: '>>'
        fullName: '>>'
  - uid: azure-iothub.Query
    name: Query
    spec.typeScript:
      - name: Query
        fullName: Query
        uid: azure-iothub.Query
  - uid: HttpResponseCallback<azure-iothub.Configuration>
    name: Configuration>
    spec.typeScript:
      - name: HttpResponseCallback<
        fullName: HttpResponseCallback<
      - name: Configuration
        fullName: Configuration
        uid: azure-iothub.Configuration
      - name: '>'
        fullName: '>'
  - uid: Promise<ResultWithHttpResponse<azure-iothub.Configuration>>
    name: Configuration>>
    spec.typeScript:
      - name: Promise<ResultWithHttpResponse<
        fullName: Promise<ResultWithHttpResponse<
      - name: Configuration
        fullName: Configuration
        uid: azure-iothub.Configuration
      - name: '>>'
        fullName: '>>'
  - uid: 'HttpResponseCallback<azure-iothub.Configuration[]>'
    name: 'Configuration[]>'
    spec.typeScript:
      - name: HttpResponseCallback<
        fullName: HttpResponseCallback<
      - name: Configuration
        fullName: Configuration
        uid: azure-iothub.Configuration
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<ResultWithHttpResponse<azure-iothub.Configuration[]>>'
    name: 'Configuration[]>>'
    spec.typeScript:
      - name: Promise<ResultWithHttpResponse<
        fullName: Promise<ResultWithHttpResponse<
      - name: Configuration
        fullName: Configuration
        uid: azure-iothub.Configuration
      - name: '[]>>'
        fullName: '[]>>'
  - uid: HttpResponseCallback<azure-iothub.Module>
    name: Module>
    spec.typeScript:
      - name: HttpResponseCallback<
        fullName: HttpResponseCallback<
      - name: Module
        fullName: Module
        uid: azure-iothub.Module
      - name: '>'
        fullName: '>'
  - uid: Promise<ResultWithHttpResponse<azure-iothub.Module>>
    name: Module>>
    spec.typeScript:
      - name: Promise<ResultWithHttpResponse<
        fullName: Promise<ResultWithHttpResponse<
      - name: Module
        fullName: Module
        uid: azure-iothub.Module
      - name: '>>'
        fullName: '>>'
  - uid: HttpResponseCallback<azure-iothub.Twin>
    name: Twin>
    spec.typeScript:
      - name: HttpResponseCallback<
        fullName: HttpResponseCallback<
      - name: Twin
        fullName: Twin
        uid: azure-iothub.Twin
      - name: '>'
        fullName: '>'
  - uid: Promise<ResultWithHttpResponse<azure-iothub.Twin>>
    name: Twin>>
    spec.typeScript:
      - name: Promise<ResultWithHttpResponse<
        fullName: Promise<ResultWithHttpResponse<
      - name: Twin
        fullName: Twin
        uid: azure-iothub.Twin
      - name: '>>'
        fullName: '>>'
  - uid: 'HttpResponseCallback<azure-iothub.Module[]>'
    name: 'Module[]>'
    spec.typeScript:
      - name: HttpResponseCallback<
        fullName: HttpResponseCallback<
      - name: Module
        fullName: Module
        uid: azure-iothub.Module
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<ResultWithHttpResponse<azure-iothub.Module[]>>'
    name: 'Module[]>>'
    spec.typeScript:
      - name: Promise<ResultWithHttpResponse<
        fullName: Promise<ResultWithHttpResponse<
      - name: Module
        fullName: Module
        uid: azure-iothub.Module
      - name: '[]>>'
        fullName: '[]>>'
  - uid: HttpResponseCallback<azure-iothub.Registry.RegistryStatistics>
    name: RegistryStatistics>
    spec.typeScript:
      - name: HttpResponseCallback<
        fullName: HttpResponseCallback<
      - name: RegistryStatistics
        fullName: RegistryStatistics
        uid: azure-iothub.Registry.RegistryStatistics
      - name: '>'
        fullName: '>'
  - uid: Promise<ResultWithHttpResponse<azure-iothub.Registry.RegistryStatistics>>
    name: RegistryStatistics>>
    spec.typeScript:
      - name: Promise<ResultWithHttpResponse<
        fullName: Promise<ResultWithHttpResponse<
      - name: RegistryStatistics
        fullName: RegistryStatistics
        uid: azure-iothub.Registry.RegistryStatistics
      - name: '>>'
        fullName: '>>'
  - uid: 'HttpResponseCallback<azure-iothub.Device[]>'
    name: 'Device[]>'
    spec.typeScript:
      - name: HttpResponseCallback<
        fullName: HttpResponseCallback<
      - name: Device
        fullName: Device
        uid: azure-iothub.Device
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<ResultWithHttpResponse<azure-iothub.Device[]>>'
    name: 'Device[]>>'
    spec.typeScript:
      - name: Promise<ResultWithHttpResponse<
        fullName: Promise<ResultWithHttpResponse<
      - name: Device
        fullName: Device
        uid: azure-iothub.Device
      - name: '[]>>'
        fullName: '[]>>'
  - uid: azure-iothub.Module | string
    name: Module | string
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: azure-iothub.Module
      - name: ' | string'
        fullName: ' | string'
  - uid: azure-iothub.Registry
    name: Registry
    spec.typeScript:
      - name: Registry
        fullName: Registry
        uid: azure-iothub.Registry
  - uid: azure-iothub.Registry.BulkRegistryOperationResult
    name: BulkRegistryOperationResult
  - uid: azure-iothub.Registry.DeviceDescription
    name: DeviceDescription
  - uid: azure-iothub.Registry.DeviceRegistryOperationError
    name: DeviceRegistryOperationError
  - uid: azure-iothub.Registry.JobStatus
    name: JobStatus
  - uid: azure-iothub.Registry.QueryDescription
    name: QueryDescription
  - uid: azure-iothub.Registry.RegistryStatistics
    name: RegistryStatistics
  - uid: azure-iothub.Registry.TransportConfig
    name: TransportConfig
  - uid: azure-iothub.Registry.BulkRegistryOperationType
    name: BulkRegistryOperationType
  - uid: azure-iothub.Registry.JobCallback
    name: JobCallback
  - uid: azure-iothub.Registry.ResponseCallback
    name: ResponseCallback
