### YamlMime:UniversalReference
items:
  - uid: azure-event-processor-host.BlobLease
    name: BlobLease
    fullName: BlobLease
    children:
      - azure-event-processor-host.BlobLease.acquire
      - azure-event-processor-host.BlobLease.blob
      - azure-event-processor-host.BlobLease.constructor
      - azure-event-processor-host.BlobLease.blobService
      - azure-event-processor-host.BlobLease.containerName
      - azure-event-processor-host.BlobLease.createFromNameAndKey
      - azure-event-processor-host.BlobLease.ensureContainerAndBlobExist
      - azure-event-processor-host.BlobLease.fullUri
      - azure-event-processor-host.BlobLease.getContent
      - azure-event-processor-host.BlobLease.hostName
      - azure-event-processor-host.BlobLease.isHeld
      - azure-event-processor-host.BlobLease.leaseId
      - azure-event-processor-host.BlobLease.notHeldError
      - azure-event-processor-host.BlobLease.partitionId
      - azure-event-processor-host.BlobLease.release
      - azure-event-processor-host.BlobLease.renew
      - azure-event-processor-host.BlobLease.storageAccount
      - azure-event-processor-host.BlobLease.updateContent
    langs:
      - typeScript
    type: class
    summary: ''
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.acquire
    name: acquire
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function acquire(options: AcquireLeaseRequestOptions)'
      parameters:
        - id: options
          type:
            - AcquireLeaseRequestOptions
          description: ''
      return:
        type:
          - Promise<azure-event-processor-host.BlobLease>
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.blob
    name: blob
    fullName: blob
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'blob: string'
      return:
        type:
          - string
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.constructor
    name: BlobLease
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new BlobLease(hostName: string, storageConnectionString: string,
        containerName: string, blob: string)
      parameters:
        - id: hostName
          type:
            - string
          description: ''
        - id: storageConnectionString
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: blob
          type:
            - string
          description: ''
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.blobService
    name: blobService
    fullName: blobService
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'blobService: BlobService'
      return:
        type:
          - BlobService
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.containerName
    name: containerName
    fullName: containerName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'containerName: string'
      return:
        type:
          - string
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.createFromNameAndKey
    name: createFromNameAndKey
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a lease from storage account name and key
    syntax:
      content: >-
        static function createFromNameAndKey(hostName: string, storageAccount:
        string, storageKey: string, containerName: string, blob: string)
      parameters:
        - id: hostName
          type:
            - string
          description: The EPH host name to which the lease belongs.
        - id: storageAccount
          type:
            - string
          description: The name of the storage account.
        - id: storageKey
          type:
            - string
          description: The storage key value.
        - id: containerName
          type:
            - string
          description: The Azure storage blob container name.
        - id: blob
          type:
            - string
          description: |
            The Azure storage blob.
      return:
        type:
          - azure-event-processor-host.BlobLease
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.ensureContainerAndBlobExist
    name: ensureContainerAndBlobExist
    children: []
    type: method
    langs:
      - typeScript
    summary: Ensures that the container and blob exist.
    syntax:
      content: function ensureContainerAndBlobExist()
      parameters: []
      return:
        type:
          - Promise<void>
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.fullUri
    name: fullUri
    fullName: fullUri
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'fullUri: string'
      return:
        type:
          - string
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.getContent
    name: getContent
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets content from the Azure Storage Blob.
    syntax:
      content: 'function getContent(options?: GetBlobRequestOptions)'
      parameters:
        - id: options
          type:
            - GetBlobRequestOptions
          description: |
            Options to be passed while getting
            content from the blob.
          optional: true
      return:
        type:
          - Promise<string>
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.hostName
    name: hostName
    fullName: hostName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'hostName: string'
      return:
        type:
          - string
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.isHeld
    name: isHeld
    fullName: isHeld
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {boolean} isHeld Provides the best-guess as to whether the lease is still
      held.

      May not be accurate if the lease has expired. Default value: false.
    syntax:
      content: 'isHeld: boolean'
      return:
        type:
          - boolean
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.leaseId
    name: leaseId
    fullName: leaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseId?: string'
      return:
        type:
          - string
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.notHeldError
    name: notHeldError
    fullName: notHeldError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static notHeldError: string'
      return:
        type:
          - string
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.partitionId
    name: partitionId
    fullName: partitionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'partitionId?: string'
      return:
        type:
          - string
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.release
    name: release
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function release(options?: LeaseRequestOptions)'
      parameters:
        - id: options
          type:
            - LeaseRequestOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-event-processor-host.BlobLease>
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.renew
    name: renew
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function renew(options: AcquireLeaseRequestOptions)'
      parameters:
        - id: options
          type:
            - AcquireLeaseRequestOptions
          description: ''
      return:
        type:
          - Promise<azure-event-processor-host.BlobLease>
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.storageAccount
    name: storageAccount
    fullName: storageAccount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'storageAccount: string'
      return:
        type:
          - string
    package: azure-event-processor-host
  - uid: azure-event-processor-host.BlobLease.updateContent
    name: updateContent
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates content from the Azure Storage Blob.
    syntax:
      content: 'function updateContent(text: string, options?: CreateBlobRequestOptions)'
      parameters:
        - id: text
          type:
            - string
          description: The text to be written
        - id: options
          type:
            - CreateBlobRequestOptions
          description: |
            The options that can be provided
            while writing content to the blob.
          optional: true
      return:
        type:
          - Promise<azure-event-processor-host.BlobLease>
    package: azure-event-processor-host
references:
  - uid: Promise<azure-event-processor-host.BlobLease>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobLease
        fullName: BlobLease
        uid: azure-event-processor-host.BlobLease
      - name: '>'
        fullName: '>'
  - uid: azure-event-processor-host.BlobLease
    spec.typeScript:
      - name: BlobLease
        fullName: BlobLease
        uid: azure-event-processor-host.BlobLease
