### YamlMime:UniversalReference
items:
  - uid: azure-event-processor-host.Lease
    name: Lease
    fullName: Lease
    children:
      - azure-event-processor-host.Lease.acquire
      - azure-event-processor-host.Lease.getContent
      - azure-event-processor-host.Lease.isHeld
      - azure-event-processor-host.Lease.leaseId
      - azure-event-processor-host.Lease.partitionId
      - azure-event-processor-host.Lease.release
      - azure-event-processor-host.Lease.renew
      - azure-event-processor-host.Lease.updateContent
    langs:
      - typeScript
    type: interface
    summary: >-
      Describes the lease used to checkpoint the offset of data received by a
      receiver for a given

      partition in a consumer group for an EventHub.
    package: azure-event-processor-host
  - uid: azure-event-processor-host.Lease.acquire
    name: acquire
    children: []
    type: method
    langs:
      - typeScript
    summary: Acquires the lease.
    syntax:
      content: 'function acquire(options: any)'
      parameters:
        - id: options
          type:
            - any
          description: Any options that need to be passed to acquire the lease.
      return:
        type:
          - Promise<azure-event-processor-host.Lease>
  - uid: azure-event-processor-host.Lease.getContent
    name: getContent
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the content.
    syntax:
      content: 'function getContent(options?: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - Promise<string>
  - uid: azure-event-processor-host.Lease.isHeld
    name: isHeld
    fullName: isHeld
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isHeld: boolean'
      return:
        type:
          - boolean
  - uid: azure-event-processor-host.Lease.leaseId
    name: leaseId
    fullName: leaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseId?: string'
      return:
        type:
          - string
  - uid: azure-event-processor-host.Lease.partitionId
    name: partitionId
    fullName: partitionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'partitionId?: string'
      return:
        type:
          - string
  - uid: azure-event-processor-host.Lease.release
    name: release
    children: []
    type: method
    langs:
      - typeScript
    summary: Releases the lease.
    syntax:
      content: 'function release(options: any)'
      parameters:
        - id: options
          type:
            - any
          description: Any options that need to be passed to release the lease.
      return:
        type:
          - Promise<azure-event-processor-host.Lease>
  - uid: azure-event-processor-host.Lease.renew
    name: renew
    children: []
    type: method
    langs:
      - typeScript
    summary: Renews the lease.
    syntax:
      content: 'function renew(options: any)'
      parameters:
        - id: options
          type:
            - any
          description: Any options that need to be passed to renew the lease.
      return:
        type:
          - Promise<azure-event-processor-host.Lease>
  - uid: azure-event-processor-host.Lease.updateContent
    name: updateContent
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the content
    syntax:
      content: 'function updateContent(text: string, options?: any)'
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: options
          type:
            - any
          description: Any options that need to be passed to update the blob content.
          optional: true
      return:
        type:
          - Promise<azure-event-processor-host.Lease>
references:
  - uid: Promise<azure-event-processor-host.Lease>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Lease
        fullName: Lease
        uid: azure-event-processor-host.Lease
      - name: '>'
        fullName: '>'
