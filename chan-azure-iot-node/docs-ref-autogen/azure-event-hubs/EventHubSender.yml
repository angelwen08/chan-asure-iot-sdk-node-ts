### YamlMime:UniversalReference
items:
  - uid: azure-event-hubs.EventHubSender
    name: EventHubSender
    fullName: EventHubSender
    children:
      - azure-event-hubs.EventHubSender.close
      - azure-event-hubs.EventHubSender.create
      - azure-event-hubs.EventHubSender.constructor
      - azure-event-hubs.EventHubSender.send
      - azure-event-hubs.EventHubSender.sendBatch
      - azure-event-hubs.EventHubSender.senderLock
    langs:
      - typeScript
    type: class
    summary: Describes the EventHubSender that will send event data to EventHub.
    extends:
      name: azure-event-hubs.ClientEntity
    package: azure-event-hubs
  - uid: azure-event-hubs.EventHubSender.close
    name: close
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      "Unlink" this sender, closing the link and resolving when that operation
      is complete.

      Leaves the underlying connection open.
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
  - uid: azure-event-hubs.EventHubSender.create
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new sender to the given event hub, and optionally to a given
      partition if it is

      not present in the context or returns the one present in the context.
    syntax:
      content: >-
        static function create(context: ConnectionContext, partitionId?: string
        | number)
      parameters:
        - id: context
          type:
            - ConnectionContext
          description: ''
        - id: partitionId
          type:
            - string | number
          description: ''
          optional: true
      return:
        type:
          - azure-event-hubs.EventHubSender
  - uid: azure-event-hubs.EventHubSender.constructor
    name: EventHubSender
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new EventHubSender instance.
    syntax:
      content: >-
        new EventHubSender(context: ConnectionContext, partitionId?: string |
        number, name?: string)
      parameters:
        - id: context
          type:
            - ConnectionContext
          description: The connection context.
        - id: partitionId
          type:
            - string | number
          description: ''
          optional: true
        - id: name
          type:
            - string
          description: ''
          optional: true
  - uid: azure-event-hubs.EventHubSender.send
    name: send
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Sends the given message, with the given options on this link'
    syntax:
      content: 'function send(data: EventData)'
      parameters:
        - id: data
          type:
            - EventData
          description: Message to send.  Will be sent as UTF8-encoded JSON string.
      return:
        type:
          - Promise<Delivery>
  - uid: azure-event-hubs.EventHubSender.sendBatch
    name: sendBatch
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send a batch of EventData to the EventHub. The "message_annotations",

      "application_properties" and "properties" of the first message will be set
      as that

      of the envelope (batch message).
    syntax:
      content: 'function sendBatch(datas: EventData[])'
      parameters:
        - id: datas
          type:
            - 'EventData[]'
          description: An array of EventData objects to be sent in a Batch message.
      return:
        type:
          - Promise<Delivery>
  - uid: azure-event-hubs.EventHubSender.senderLock
    name: senderLock
    fullName: senderLock
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'senderLock: string'
      return:
        type:
          - string
