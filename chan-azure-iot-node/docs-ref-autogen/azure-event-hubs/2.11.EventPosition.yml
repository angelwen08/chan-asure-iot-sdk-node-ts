### YamlMime:UniversalReference
items:
  - uid: azure-event-hubs - v0.2.11.EventPosition
    name: EventPosition
    fullName: EventPosition
    children:
      - azure-event-hubs - v0.2.11.EventPosition.customFilter
      - azure-event-hubs - v0.2.11.EventPosition.endOfStream
      - azure-event-hubs - v0.2.11.EventPosition.enqueuedTime
      - azure-event-hubs - v0.2.11.EventPosition.constructor
      - azure-event-hubs - v0.2.11.EventPosition.fromEnd
      - azure-event-hubs - v0.2.11.EventPosition.fromEnqueuedTime
      - azure-event-hubs - v0.2.11.EventPosition.fromOffset
      - azure-event-hubs - v0.2.11.EventPosition.fromSequenceNumber
      - azure-event-hubs - v0.2.11.EventPosition.fromStart
      - azure-event-hubs - v0.2.11.EventPosition.getExpression
      - azure-event-hubs - v0.2.11.EventPosition.isInclusive
      - azure-event-hubs - v0.2.11.EventPosition.offset
      - azure-event-hubs - v0.2.11.EventPosition.sequenceNumber
      - azure-event-hubs - v0.2.11.EventPosition.startOfStream
      - azure-event-hubs - v0.2.11.EventPosition.withCustomFilter
    langs:
      - typeScript
    type: class
    summary: |-
      Represents options can be set during the creation of a event hub receiver.
      Defines a position of an @link~EventData in the event hub partition.
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.customFilter
    name: customFilter
    fullName: customFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} [customFilter] The custom filter expression that needs to be set
      on the receiver.
    optional: true
    syntax:
      content: 'customFilter?: string'
      return:
        type:
          - string
        description: ''
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.endOfStream
    name: endOfStream
    fullName: endOfStream
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} endOfStream The offset from which events would be received:
      `"@latest"`.
    syntax:
      content: 'static endOfStream: string = "@latest"'
      return:
        type:
          - string
        description: ''
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.enqueuedTime
    name: enqueuedTime
    fullName: enqueuedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {Date|number} [enqueuedTime] The enqueued time of the event at the
      position. It can be undefined

      if the position is just created from a sequence number or an offset.
    optional: true
    syntax:
      content: 'enqueuedTime?: Date | number'
      return:
        type:
          - Date | number
        description: ''
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.constructor
    name: EventPosition(EventPositionOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new EventPosition(options?: EventPositionOptions)'
      parameters:
        - id: options
          type:
            - EventPositionOptions
          description: ''
          optional: true
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.fromEnd
    name: fromEnd()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the position for the end of a stream. Provide this position in
      receiver creation to

      start receiving from the next available event in the partition after the
      receiver is created.
    syntax:
      content: static function fromEnd()
      parameters: []
      return:
        type:
          - azure-event-hubs - v0.2.11.EventPosition
        description: EventPosition
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.fromEnqueuedTime
    name: fromEnqueuedTime(Date | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a position at the given enqueued time.
    syntax:
      content: 'static function fromEnqueuedTime(enqueuedTime: Date | number)'
      parameters:
        - id: enqueuedTime
          type:
            - Date | number
          description: >-
            The enqueue time. This value represents the actual time of enqueuing
            the message.
      return:
        type:
          - azure-event-hubs - v0.2.11.EventPosition
        description: EventPosition
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.fromOffset
    name: 'fromOffset(string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a position at the given offset.
    syntax:
      content: 'static function fromOffset(offset: string, isInclusive?: boolean)'
      parameters:
        - id: offset
          type:
            - string
          description: >-
            The offset of the data relative to the Event Hub partition stream.

            The offset is a marker or identifier for an event within the Event
            Hubs stream.

            The identifier is unique within a partition of the Event Hubs
            stream.
        - id: isInclusive
          type:
            - boolean
          description: |-
            If true, the specified event is included;
            otherwise the next event is returned. Default: false.
          optional: true
      return:
        type:
          - azure-event-hubs - v0.2.11.EventPosition
        description: EventPosition
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.fromSequenceNumber
    name: 'fromSequenceNumber(number, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a position at the given sequence number.
    syntax:
      content: >-
        static function fromSequenceNumber(sequenceNumber: number, isInclusive?:
        boolean)
      parameters:
        - id: sequenceNumber
          type:
            - number
          description: >-
            The logical sequence number of the event within the partition stream
            of the Event Hub.
        - id: isInclusive
          type:
            - boolean
          description: |-
            If true, the specified event is included;
            otherwise the next event is returned. Default false.
          optional: true
      return:
        type:
          - azure-event-hubs - v0.2.11.EventPosition
        description: EventPosition
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.fromStart
    name: fromStart()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the position for the start of a stream. Provide this position in
      receiver creation to

      start receiving from the first available event in the partition.
    syntax:
      content: static function fromStart()
      parameters: []
      return:
        type:
          - azure-event-hubs - v0.2.11.EventPosition
        description: EventPosition
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.getExpression
    name: getExpression()
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the expression (filter clause) that needs to be set on the source.
    syntax:
      content: function getExpression()
      parameters: []
      return:
        type:
          - string
        description: filterExpression
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.isInclusive
    name: isInclusive
    fullName: isInclusive
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {boolean} isInclusive Indicates if the current event at the specified
      offset is

      included or not. It is only applicable if offset is set. Default value:
      false.
    syntax:
      content: 'isInclusive: boolean = false'
      return:
        type:
          - boolean
        description: ''
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.offset
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} [offset] The offset of the event at the position. It can be
      undefined

      if the position is just created from a sequence number or an enqueued
      time.
    optional: true
    syntax:
      content: 'offset?: string'
      return:
        type:
          - string
        description: ''
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.sequenceNumber
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {number} [sequenceNumber] The sequence number of the event at the
      position. It can be undefined

      if the position is just created from an enqueued time or an offset.
    optional: true
    syntax:
      content: 'sequenceNumber?: number'
      return:
        type:
          - number
        description: ''
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.startOfStream
    name: startOfStream
    fullName: startOfStream
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} startOfStream The offset from which events would be received:
      `"-1"`.
    syntax:
      content: 'static startOfStream: string = "-1"'
      return:
        type:
          - string
        description: ''
    package: azure-event-hubs - v0
  - uid: azure-event-hubs - v0.2.11.EventPosition.withCustomFilter
    name: withCustomFilter(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a position based on the given custom filter.
    syntax:
      content: 'static function withCustomFilter(customFilter: string)'
      parameters:
        - id: customFilter
          type:
            - string
          description: >
            The cutom filter expression that needs to be applied on the
            receiver. This should be used

            only when one of the other methods `fromOffset()`,
            `fromSequenceNumber()`, `fromEnqueuedTime()` is not applicable for

            your scenario.
      return:
        type:
          - azure-event-hubs - v0.2.11.EventPosition
        description: ''
    package: azure-event-hubs - v0
references:
  - uid: azure-event-hubs - v0.2.11.EventPosition
    name: EventPosition
    spec.typeScript:
      - name: EventPosition
        fullName: EventPosition
        uid: azure-event-hubs - v0.2.11.EventPosition
