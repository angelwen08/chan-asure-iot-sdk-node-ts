### YamlMime:UniversalReference
items:
  - uid: azure-event-hubs.Session
    name: Session
    fullName: Session
    children:
      - azure-event-hubs.Session.begin
      - azure-event-hubs.Session.close
      - azure-event-hubs.Session.connection
      - azure-event-hubs.Session.createReceiver
      - azure-event-hubs.Session.createSender
      - azure-event-hubs.Session.isOpen
      - azure-event-hubs.Session.outgoing
      - azure-event-hubs.Session.registerConnectionHandler
      - azure-event-hubs.Session.registerHandler
      - azure-event-hubs.Session.remove
      - azure-event-hubs.Session.removeConnectionHandler
      - azure-event-hubs.Session.removeHandler
      - azure-event-hubs.Session.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.begin
    name: begin
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function begin()
      parameters: []
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.close
    name: close
    children: []
    type: method
    langs:
      - typeScript
    summary: Closes the amqp session.
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.connection
    name: connection
    fullName: connection
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connection: Connection'
      return:
        type:
          - azure-event-hubs.Connection
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.createReceiver
    name: createReceiver
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an amqp receiver on this session.
    syntax:
      content: 'function createReceiver(options?: ReceiverOptions)'
      parameters:
        - id: options
          type:
            - azure-event-hubs.ReceiverOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-event-hubs.Receiver>
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.createSender
    name: createSender
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an amqp sender on this session.
    syntax:
      content: 'function createSender(options?: SenderOptions)'
      parameters:
        - id: options
          type:
            - azure-event-hubs.SenderOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-event-hubs.Sender>
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.isOpen
    name: isOpen
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isOpen()
      parameters: []
      return:
        type:
          - boolean
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.outgoing
    name: outgoing
    fullName: outgoing
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'outgoing: any'
      return:
        type:
          - any
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.registerConnectionHandler
    name: registerConnectionHandler
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function registerConnectionHandler(event: ConnectionEvents, handler:
        rhea.OnAmqpEvent)
      parameters:
        - id: event
          type:
            - ConnectionEvents
          description: ''
        - id: handler
          type:
            - rhea.OnAmqpEvent
          description: ''
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.registerHandler
    name: registerHandler
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function registerHandler(event: SessionEvents, handler:
        rhea.OnAmqpEvent)
      parameters:
        - id: event
          type:
            - SessionEvents
          description: ''
        - id: handler
          type:
            - rhea.OnAmqpEvent
          description: ''
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.remove
    name: remove
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function remove()
      parameters: []
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.removeConnectionHandler
    name: removeConnectionHandler
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeConnectionHandler(event: ConnectionEvents, handler:
        rhea.OnAmqpEvent)
      parameters:
        - id: event
          type:
            - ConnectionEvents
          description: ''
        - id: handler
          type:
            - rhea.OnAmqpEvent
          description: ''
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.removeHandler
    name: removeHandler
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeHandler(event: SessionEvents, handler: rhea.OnAmqpEvent)'
      parameters:
        - id: event
          type:
            - SessionEvents
          description: ''
        - id: handler
          type:
            - rhea.OnAmqpEvent
          description: ''
    package: azure-event-hubs
  - uid: azure-event-hubs.Session.constructor
    name: Session
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Session(connection: Connection, session: Session)'
      parameters:
        - id: connection
          type:
            - azure-event-hubs.Connection
          description: ''
        - id: session
          type:
            - Session
          description: ''
    package: azure-event-hubs
references:
  - uid: azure-event-hubs.Connection
    spec.typeScript:
      - name: Connection
        fullName: Connection
        uid: azure-event-hubs.Connection
  - uid: azure-event-hubs.ReceiverOptions
    spec.typeScript:
      - name: ReceiverOptions
        fullName: ReceiverOptions
        uid: azure-event-hubs.ReceiverOptions
  - uid: Promise<azure-event-hubs.Receiver>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Receiver
        fullName: Receiver
        uid: azure-event-hubs.Receiver
      - name: '>'
        fullName: '>'
  - uid: azure-event-hubs.SenderOptions
    spec.typeScript:
      - name: SenderOptions
        fullName: SenderOptions
        uid: azure-event-hubs.SenderOptions
  - uid: Promise<azure-event-hubs.Sender>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Sender
        fullName: Sender
        uid: azure-event-hubs.Sender
      - name: '>'
        fullName: '>'
