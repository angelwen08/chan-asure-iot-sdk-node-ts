### YamlMime:UniversalReference
items:
  - uid: azure-iot-device - v1.12.1.ModuleClient
    name: ModuleClient
    fullName: ModuleClient
    children:
      - azure-iot-device - v1.12.1.ModuleClient.abandon_1
      - azure-iot-device - v1.12.1.ModuleClient.abandon
      - azure-iot-device - v1.12.1.ModuleClient.addListener
      - azure-iot-device - v1.12.1.ModuleClient.close_1
      - azure-iot-device - v1.12.1.ModuleClient.close
      - azure-iot-device - v1.12.1.ModuleClient.complete_1
      - azure-iot-device - v1.12.1.ModuleClient.complete
      - azure-iot-device - v1.12.1.ModuleClient.defaultMaxListeners
      - azure-iot-device - v1.12.1.ModuleClient.emit
      - azure-iot-device - v1.12.1.ModuleClient.eventNames
      - azure-iot-device - v1.12.1.ModuleClient.fromAuthenticationProvider
      - azure-iot-device - v1.12.1.ModuleClient.fromConnectionString
      - azure-iot-device - v1.12.1.ModuleClient.fromEnvironment_1
      - azure-iot-device - v1.12.1.ModuleClient.fromEnvironment
      - azure-iot-device - v1.12.1.ModuleClient.fromSharedAccessSignature
      - azure-iot-device - v1.12.1.ModuleClient.getMaxListeners
      - azure-iot-device - v1.12.1.ModuleClient.getTwin_1
      - azure-iot-device - v1.12.1.ModuleClient.getTwin
      - azure-iot-device - v1.12.1.ModuleClient.invokeMethod_2
      - azure-iot-device - v1.12.1.ModuleClient.invokeMethod
      - azure-iot-device - v1.12.1.ModuleClient.invokeMethod_3
      - azure-iot-device - v1.12.1.ModuleClient.invokeMethod_1
      - azure-iot-device - v1.12.1.ModuleClient.listenerCount
      - azure-iot-device - v1.12.1.ModuleClient.listenerCount
      - azure-iot-device - v1.12.1.ModuleClient.listeners
      - azure-iot-device - v1.12.1.ModuleClient.on
      - azure-iot-device - v1.12.1.ModuleClient.once
      - azure-iot-device - v1.12.1.ModuleClient.onMethod
      - azure-iot-device - v1.12.1.ModuleClient.open_1
      - azure-iot-device - v1.12.1.ModuleClient.open
      - azure-iot-device - v1.12.1.ModuleClient.prependListener
      - azure-iot-device - v1.12.1.ModuleClient.prependOnceListener
      - azure-iot-device - v1.12.1.ModuleClient.reject_1
      - azure-iot-device - v1.12.1.ModuleClient.reject
      - azure-iot-device - v1.12.1.ModuleClient.removeAllListeners
      - azure-iot-device - v1.12.1.ModuleClient.removeListener
      - azure-iot-device - v1.12.1.ModuleClient.sendEvent_1
      - azure-iot-device - v1.12.1.ModuleClient.sendEvent
      - azure-iot-device - v1.12.1.ModuleClient.sendEventBatch_1
      - azure-iot-device - v1.12.1.ModuleClient.sendEventBatch
      - azure-iot-device - v1.12.1.ModuleClient.sendOutputEvent_1
      - azure-iot-device - v1.12.1.ModuleClient.sendOutputEvent
      - azure-iot-device - v1.12.1.ModuleClient.sendOutputEventBatch_1
      - azure-iot-device - v1.12.1.ModuleClient.sendOutputEventBatch
      - azure-iot-device - v1.12.1.ModuleClient.setMaxListeners
      - azure-iot-device - v1.12.1.ModuleClient.setOptions_1
      - azure-iot-device - v1.12.1.ModuleClient.setOptions
      - azure-iot-device - v1.12.1.ModuleClient.setRetryPolicy
      - azure-iot-device - v1.12.1.ModuleClient.setTransportOptions_1
      - azure-iot-device - v1.12.1.ModuleClient.setTransportOptions
      - azure-iot-device - v1.12.1.ModuleClient.updateSharedAccessSignature
    langs:
      - typeScript
    type: class
    summary: >
      IoT Hub device client used to connect a device with an Azure IoT hub.

      Users of the SDK should call one of the factory methods,

      [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString)

      or
      [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature)

      to create an IoT Hub device client.
    extends:
      name: InternalClient
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.abandon_1
    name: abandon(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageAbandoned>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.abandon
    name: 'abandon(Message, Callback<MessageAbandoned>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function abandon(message: Message, abandonCallback:
        Callback<MessageAbandoned>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: abandonCallback
          type:
            - Callback<MessageAbandoned>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.addListener
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.close_1
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Closes the transport connection and destroys the client resources.

      *Note: After calling this method the ModuleClient object cannot be
      reused.*
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<Disconnected>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.close
    name: close(Callback<Disconnected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Closes the transport connection and destroys the client resources.

      *Note: After calling this method the ModuleClient object cannot be
      reused.*
    syntax:
      content: 'function close(closeCallback: Callback<Disconnected>)'
      parameters:
        - id: closeCallback
          type:
            - Callback<Disconnected>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.complete_1
    name: complete(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageCompleted>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.complete
    name: 'complete(Message, Callback<MessageCompleted>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function complete(message: Message, completeCallback:
        Callback<MessageCompleted>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: completeCallback
          type:
            - Callback<MessageCompleted>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.defaultMaxListeners
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.fromAuthenticationProvider
    name: 'fromAuthenticationProvider(AuthenticationProvider, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an IoT Hub module client from the given authentication method and
      using the given transport type.
    syntax:
      content: >-
        static function fromAuthenticationProvider(authenticationProvider:
        AuthenticationProvider, transportCtor: any)
      parameters:
        - id: authenticationProvider
          type:
            - AuthenticationProvider
          description: Object used to obtain the authentication parameters for the IoT hub.
        - id: transportCtor
          type:
            - any
          description: |
            Transport protocol used to connect to IoT hub.
      return:
        type:
          - azure-iot-device - v1.12.1.ModuleClient
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.fromConnectionString
    name: 'fromConnectionString(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an IoT Hub device client from the given connection string using
      the given transport type.
    syntax:
      content: >-
        static function fromConnectionString(connStr: string, transportCtor:
        any)
      parameters:
        - id: connStr
          type:
            - string
          description: >-
            A connection string which encapsulates "device connect" permissions
            on an IoT hub.
        - id: transportCtor
          type:
            - any
          description: |
            A transport constructor.
      return:
        type:
          - azure-iot-device - v1.12.1.ModuleClient
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.fromEnvironment_1
    name: fromEnvironment(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Creates an IoT Hub module client by using configuration information from
      the environment.

      If an environment variable called `EdgeHubConnectionString` or
      `IotHubConnectionString` exists, then that value is used and behavior is
      identical

      to calling `fromConnectionString` passing that in. If those environment
      variables do not exist then the following variables MUST be defined:

          - IOTEDGE_WORKLOADURI          URI for iotedged's workload API
          - IOTEDGE_DEVICEID             Device identifier
          - IOTEDGE_MODULEID             Module identifier
          - IOTEDGE_MODULEGENERATIONID   Module generation identifier
          - IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name
          - IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"
    syntax:
      content: 'static function fromEnvironment(transportCtor: any)'
      parameters:
        - id: transportCtor
          type:
            - any
          description: ''
      return:
        type:
          - Promise<azure-iot-device - v1.12.1.ModuleClient>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.fromEnvironment
    name: 'fromEnvironment(any, Callback<ModuleClient>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Creates an IoT Hub module client by using configuration information from
      the environment.

      If an environment variable called `EdgeHubConnectionString` or
      `IotHubConnectionString` exists, then that value is used and behavior is
      identical

      to calling `fromConnectionString` passing that in. If those environment
      variables do not exist then the following variables MUST be defined:

          - IOTEDGE_WORKLOADURI          URI for iotedged's workload API
          - IOTEDGE_DEVICEID             Device identifier
          - IOTEDGE_MODULEID             Module identifier
          - IOTEDGE_MODULEGENERATIONID   Module generation identifier
          - IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name
          - IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"
    syntax:
      content: >-
        static function fromEnvironment(transportCtor: any, callback:
        Callback<ModuleClient>)
      parameters:
        - id: transportCtor
          type:
            - any
          description: Transport protocol used to connect to IoT hub.
        - id: callback
          type:
            - Callback<azure-iot-device - v1.12.1.ModuleClient>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.fromSharedAccessSignature
    name: 'fromSharedAccessSignature(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an IoT Hub module client from the given shared access signature
      using the given transport type.
    syntax:
      content: >-
        static function fromSharedAccessSignature(sharedAccessSignature: string,
        transportCtor: any)
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: |-
            A shared access signature which encapsulates "device
                                             connect" permissions on an IoT hub.
        - id: transportCtor
          type:
            - any
          description: ''
      return:
        type:
          - azure-iot-device - v1.12.1.ModuleClient
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.getTwin_1
    name: getTwin()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getTwin()
      parameters: []
      return:
        type:
          - Promise<azure-iot-device - v1.12.1.Twin>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.getTwin
    name: getTwin(Callback<Twin>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTwin(done: Callback<Twin>)'
      parameters:
        - id: done
          type:
            - Callback<azure-iot-device - v1.12.1.Twin>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.invokeMethod_2
    name: 'invokeMethod(string, MethodParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Invokes a method on a downstream device or on another module on the same
      Edge device. Please note that this feature only works when

      the module is being run as part of an Edge device.
    syntax:
      content: 'function invokeMethod(deviceId: string, methodParams: MethodParams)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: methodParams
          type:
            - azure-iot-device - v1.12.1.MethodParams
          description: ''
      return:
        type:
          - Promise<azure-iot-device - v1.12.1.MethodResult>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.invokeMethod
    name: 'invokeMethod(string, MethodParams, Callback<MethodResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Invokes a method on a downstream device or on another module on the same
      Edge device. Please note that this feature only works when

      the module is being run as part of an Edge device.
    syntax:
      content: >-
        function invokeMethod(deviceId: string, methodParams: MethodParams,
        callback: Callback<MethodResult>)
      parameters:
        - id: deviceId
          type:
            - string
          description: target device identifier
        - id: methodParams
          type:
            - azure-iot-device - v1.12.1.MethodParams
          description: parameters of the direct method call
        - id: callback
          type:
            - Callback<azure-iot-device - v1.12.1.MethodResult>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.invokeMethod_3
    name: 'invokeMethod(string, string, MethodParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Invokes a method on a downstream device or on another module on the same
      Edge device. Please note that this feature only works when

      the module is being run as part of an Edge device.
    syntax:
      content: >-
        function invokeMethod(deviceId: string, moduleId: string, methodParams:
        MethodParams)
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
        - id: methodParams
          type:
            - azure-iot-device - v1.12.1.MethodParams
          description: ''
      return:
        type:
          - Promise<azure-iot-device - v1.12.1.MethodResult>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.invokeMethod_1
    name: 'invokeMethod(string, string, MethodParams, Callback<MethodResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Invokes a method on a downstream device or on another module on the same
      Edge device. Please note that this feature only works when

      the module is being run as part of an Edge device.
    syntax:
      content: >-
        function invokeMethod(deviceId: string, moduleId: string, methodParams:
        MethodParams, callback: Callback<MethodResult>)
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
        - id: methodParams
          type:
            - azure-iot-device - v1.12.1.MethodParams
          description: ''
        - id: callback
          type:
            - Callback<azure-iot-device - v1.12.1.MethodResult>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.listenerCount
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - EventEmitter
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.on
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.once
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.onMethod
    name: >-
      onMethod(string, DoubleValueCallback<DeviceMethodRequest,
      DeviceMethodResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Registers a callback for a method named `methodName`.
    syntax:
      content: >-
        function onMethod(methodName: string, callback:
        DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)
      parameters:
        - id: methodName
          type:
            - string
          description: Name of the method that will be handled by the callback
        - id: callback
          type:
            - >-
              DoubleValueCallback<azure-iot-device -
              v1.12.1.DeviceMethodRequest, azure-iot-device -
              v1.12.1.DeviceMethodResponse>
          description: >
            Function that shall be called whenever a method request for the
            method called `methodName` is received.
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.open_1
    name: open()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function open()
      parameters: []
      return:
        type:
          - Promise<Connected>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.open
    name: open(Callback<Connected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function open(openCallback: Callback<Connected>)'
      parameters:
        - id: openCallback
          type:
            - Callback<Connected>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.prependListener
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.prependOnceListener
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.reject_1
    name: reject(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageRejected>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.reject
    name: 'reject(Message, Callback<MessageRejected>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function reject(message: Message, rejectCallback:
        Callback<MessageRejected>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: rejectCallback
          type:
            - Callback<MessageRejected>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.sendEvent_1
    name: sendEvent(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEvent(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.sendEvent
    name: 'sendEvent(Message, Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendEvent(message: Message, sendEventCallback:
        Callback<MessageEnqueued>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: sendEventCallback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.sendEventBatch_1
    name: 'sendEventBatch(Message[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEventBatch(messages: Message[])'
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.sendEventBatch
    name: 'sendEventBatch(Message[], Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendEventBatch(messages: Message[], sendEventBatchCallback:
        Callback<MessageEnqueued>)
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
        - id: sendEventBatchCallback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.sendOutputEvent_1
    name: 'sendOutputEvent(string, Message)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends an event to the given module output
    syntax:
      content: 'function sendOutputEvent(outputName: string, message: Message)'
      parameters:
        - id: outputName
          type:
            - string
          description: ''
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.sendOutputEvent
    name: 'sendOutputEvent(string, Message, Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends an event to the given module output
    syntax:
      content: >-
        function sendOutputEvent(outputName: string, message: Message, callback:
        Callback<MessageEnqueued>)
      parameters:
        - id: outputName
          type:
            - string
          description: Name of the output to send the event to
        - id: message
          type:
            - Message
          description: Message to send to the given output
        - id: callback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.sendOutputEventBatch_1
    name: 'sendOutputEventBatch(string, Message[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends an array of events to the given module output
    syntax:
      content: 'function sendOutputEventBatch(outputName: string, messages: Message[])'
      parameters:
        - id: outputName
          type:
            - string
          description: ''
        - id: messages
          type:
            - 'Message[]'
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.sendOutputEventBatch
    name: 'sendOutputEventBatch(string, Message[], Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends an array of events to the given module output
    syntax:
      content: >-
        function sendOutputEventBatch(outputName: string, messages: Message[],
        callback: Callback<MessageEnqueued>)
      parameters:
        - id: outputName
          type:
            - string
          description: Name of the output to send the events to
        - id: messages
          type:
            - 'Message[]'
          description: ''
        - id: callback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.setOptions_1
    name: setOptions(DeviceClientOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Passes options to the `ModuleClient` object that can be used to configure
      the transport.
    syntax:
      content: 'function setOptions(options: DeviceClientOptions)'
      parameters:
        - id: options
          type:
            - azure-iot-device - v1.12.1.DeviceClientOptions
          description: ''
      return:
        type:
          - Promise<TransportConfigured>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.setOptions
    name: 'setOptions(DeviceClientOptions, Callback<TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Passes options to the `ModuleClient` object that can be used to configure
      the transport.
    syntax:
      content: >-
        function setOptions(options: DeviceClientOptions, done:
        Callback<TransportConfigured>)
      parameters:
        - id: options
          type:
            - azure-iot-device - v1.12.1.DeviceClientOptions
          description: 'A <xref:DeviceClientOptions> object.'
        - id: done
          type:
            - Callback<TransportConfigured>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.setRetryPolicy
    name: setRetryPolicy(RetryPolicy)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets the retry policy used by the client on all operations. The default is
      [ExponentialBackoffWithJitter](xref:azure-iot-common.ExponentialBackoffWithJitter).
    syntax:
      content: 'function setRetryPolicy(policy: RetryPolicy)'
      parameters:
        - id: policy
          type:
            - RetryPolicy
          description: |
            The retry policy that should be used for all future operations.
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.setTransportOptions_1
    name: setTransportOptions(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTransportOptions(options: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
      return:
        type:
          - Promise<TransportConfigured>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.setTransportOptions
    name: 'setTransportOptions(any, Callback<TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setTransportOptions(options: any, done:
        Callback<TransportConfigured>)
      parameters:
        - id: options
          type:
            - any
          description: ''
        - id: done
          type:
            - Callback<TransportConfigured>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.ModuleClient.updateSharedAccessSignature
    name: >-
      updateSharedAccessSignature(string,
      Callback<SharedAccessSignatureUpdated>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSharedAccessSignature(sharedAccessSignature: string,
        updateSasCallback?: Callback<SharedAccessSignatureUpdated>)
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: ''
        - id: updateSasCallback
          type:
            - Callback<SharedAccessSignatureUpdated>
          description: ''
          optional: true
    package: azure-iot-device - v1
references:
  - uid: Callback<azure-iot-device - v1.12.1.Twin>
    name: Twin>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device - v1.12.1.Twin
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device - v1.12.1.Twin>
    name: Twin>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device - v1.12.1.Twin
      - name: '>'
        fullName: '>'
  - uid: azure-iot-device - v1.12.1.MethodParams
    name: MethodParams
    spec.typeScript:
      - name: MethodParams
        fullName: MethodParams
        uid: azure-iot-device - v1.12.1.MethodParams
  - uid: Callback<azure-iot-device - v1.12.1.MethodResult>
    name: MethodResult>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: MethodResult
        fullName: MethodResult
        uid: azure-iot-device - v1.12.1.MethodResult
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device - v1.12.1.MethodResult>
    name: MethodResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: MethodResult
        fullName: MethodResult
        uid: azure-iot-device - v1.12.1.MethodResult
      - name: '>'
        fullName: '>'
  - uid: >-
      DoubleValueCallback<azure-iot-device - v1.12.1.DeviceMethodRequest,
      azure-iot-device - v1.12.1.DeviceMethodResponse>
    name: DeviceMethodResponse>
    spec.typeScript:
      - name: DoubleValueCallback<
        fullName: DoubleValueCallback<
      - name: DeviceMethodRequest
        fullName: DeviceMethodRequest
        uid: azure-iot-device - v1.12.1.DeviceMethodRequest
      - name: ', '
        fullName: ', '
      - name: DeviceMethodResponse
        fullName: DeviceMethodResponse
        uid: azure-iot-device - v1.12.1.DeviceMethodResponse
      - name: '>'
        fullName: '>'
  - uid: azure-iot-device - v1.12.1.DeviceClientOptions
    name: DeviceClientOptions
    spec.typeScript:
      - name: DeviceClientOptions
        fullName: DeviceClientOptions
        uid: azure-iot-device - v1.12.1.DeviceClientOptions
  - uid: azure-iot-device - v1.12.1.ModuleClient
    name: ModuleClient
    spec.typeScript:
      - name: ModuleClient
        fullName: ModuleClient
        uid: azure-iot-device - v1.12.1.ModuleClient
  - uid: Callback<azure-iot-device - v1.12.1.ModuleClient>
    name: ModuleClient>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: ModuleClient
        fullName: ModuleClient
        uid: azure-iot-device - v1.12.1.ModuleClient
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device - v1.12.1.ModuleClient>
    name: ModuleClient>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ModuleClient
        fullName: ModuleClient
        uid: azure-iot-device - v1.12.1.ModuleClient
      - name: '>'
        fullName: '>'
