### YamlMime:UniversalReference
items:
  - uid: azure-iot-device - v1.12.1.Client
    name: Client
    fullName: Client
    children:
      - azure-iot-device - v1.12.1.Client.abandon_1
      - azure-iot-device - v1.12.1.Client.abandon
      - azure-iot-device - v1.12.1.Client.addListener
      - azure-iot-device - v1.12.1.Client.constructor
      - azure-iot-device - v1.12.1.Client.close_1
      - azure-iot-device - v1.12.1.Client.close
      - azure-iot-device - v1.12.1.Client.complete_1
      - azure-iot-device - v1.12.1.Client.complete
      - azure-iot-device - v1.12.1.Client.defaultMaxListeners
      - azure-iot-device - v1.12.1.Client.emit
      - azure-iot-device - v1.12.1.Client.eventNames
      - azure-iot-device - v1.12.1.Client.fromAuthenticationProvider
      - azure-iot-device - v1.12.1.Client.fromConnectionString
      - azure-iot-device - v1.12.1.Client.fromSharedAccessSignature
      - azure-iot-device - v1.12.1.Client.getBlobSharedAccessSignature_1
      - azure-iot-device - v1.12.1.Client.getBlobSharedAccessSignature
      - azure-iot-device - v1.12.1.Client.getMaxListeners
      - azure-iot-device - v1.12.1.Client.getTwin_1
      - azure-iot-device - v1.12.1.Client.getTwin
      - azure-iot-device - v1.12.1.Client.listenerCount
      - azure-iot-device - v1.12.1.Client.listenerCount
      - azure-iot-device - v1.12.1.Client.listeners
      - azure-iot-device - v1.12.1.Client.notifyBlobUploadStatus_1
      - azure-iot-device - v1.12.1.Client.notifyBlobUploadStatus
      - azure-iot-device - v1.12.1.Client.on
      - azure-iot-device - v1.12.1.Client.once
      - azure-iot-device - v1.12.1.Client.onDeviceMethod
      - azure-iot-device - v1.12.1.Client.open_1
      - azure-iot-device - v1.12.1.Client.open
      - azure-iot-device - v1.12.1.Client.prependListener
      - azure-iot-device - v1.12.1.Client.prependOnceListener
      - azure-iot-device - v1.12.1.Client.reject_1
      - azure-iot-device - v1.12.1.Client.reject
      - azure-iot-device - v1.12.1.Client.removeAllListeners
      - azure-iot-device - v1.12.1.Client.removeListener
      - azure-iot-device - v1.12.1.Client.sendEvent_1
      - azure-iot-device - v1.12.1.Client.sendEvent
      - azure-iot-device - v1.12.1.Client.sendEventBatch_1
      - azure-iot-device - v1.12.1.Client.sendEventBatch
      - azure-iot-device - v1.12.1.Client.setMaxListeners
      - azure-iot-device - v1.12.1.Client.setOptions_1
      - azure-iot-device - v1.12.1.Client.setOptions
      - azure-iot-device - v1.12.1.Client.setRetryPolicy
      - azure-iot-device - v1.12.1.Client.setTransportOptions_1
      - azure-iot-device - v1.12.1.Client.setTransportOptions
      - azure-iot-device - v1.12.1.Client.updateSharedAccessSignature
      - azure-iot-device - v1.12.1.Client.uploadToBlob_1
      - azure-iot-device - v1.12.1.Client.uploadToBlob
    langs:
      - typeScript
    type: class
    summary: >
      IoT Hub device client used to connect a device with an Azure IoT hub.

      Users of the SDK should call one of the factory methods,

      [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString)

      or
      [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature)

      to create an IoT Hub device client.
    extends:
      name: InternalClient
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.abandon_1
    name: abandon(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageAbandoned>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.abandon
    name: 'abandon(Message, Callback<MessageAbandoned>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function abandon(message: Message, abandonCallback:
        Callback<MessageAbandoned>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: abandonCallback
          type:
            - Callback<MessageAbandoned>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.addListener
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.constructor
    name: 'Client(DeviceTransport, string, BlobUploadClient, FileUploadInterface)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new Client(transport: DeviceTransport, connStr?: string,
        blobUploadClient?: BlobUploadClient, fileUploadApi?:
        FileUploadInterface)
      parameters:
        - id: transport
          type:
            - azure-iot-device - v1.12.1.DeviceTransport
          description: |-
            An object that implements the interface
                                               expected of a transport object, e.g.,
                                               [Http](xref:azure-iot-device-http.Http).
        - id: connStr
          type:
            - string
          description: >-
            A connection string (optional: when not provided,
            updateSharedAccessSignature must be called to set the
            SharedAccessSignature token directly).
          optional: true
        - id: blobUploadClient
          type:
            - BlobUploadClient
          description: An object that is capable of uploading a stream to a blob.
          optional: true
        - id: fileUploadApi
          type:
            - FileUploadInterface
          description: >
            An object that is used for communicating with IoT Hub for Blob
            Storage related actions.
          optional: true
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.close_1
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Closes the transport connection and destroys the client resources.
      *Note: After calling this method the Client object cannot be reused.*
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<Disconnected>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.close
    name: close(Callback<Disconnected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Closes the transport connection and destroys the client resources.
      *Note: After calling this method the Client object cannot be reused.*
    syntax:
      content: 'function close(closeCallback: Callback<Disconnected>)'
      parameters:
        - id: closeCallback
          type:
            - Callback<Disconnected>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.complete_1
    name: complete(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageCompleted>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.complete
    name: 'complete(Message, Callback<MessageCompleted>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function complete(message: Message, completeCallback:
        Callback<MessageCompleted>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: completeCallback
          type:
            - Callback<MessageCompleted>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.defaultMaxListeners
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.fromAuthenticationProvider
    name: 'fromAuthenticationProvider(AuthenticationProvider, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an IoT Hub device client from the given authentication method and
      using the given transport type.
    syntax:
      content: >-
        static function fromAuthenticationProvider(authenticationProvider:
        AuthenticationProvider, transportCtor: any)
      parameters:
        - id: authenticationProvider
          type:
            - AuthenticationProvider
          description: Object used to obtain the authentication parameters for the IoT hub.
        - id: transportCtor
          type:
            - any
          description: |
            Transport protocol used to connect to IoT hub.
      return:
        type:
          - azure-iot-device - v1.12.1.Client
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.fromConnectionString
    name: 'fromConnectionString(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an IoT Hub device client from the given connection string using
      the given transport type.
    syntax:
      content: >-
        static function fromConnectionString(connStr: string, transportCtor:
        any)
      parameters:
        - id: connStr
          type:
            - string
          description: >-
            A connection string which encapsulates "device connect" permissions
            on an IoT hub.
        - id: transportCtor
          type:
            - any
          description: |
            A transport constructor.
      return:
        type:
          - azure-iot-device - v1.12.1.Client
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.fromSharedAccessSignature
    name: 'fromSharedAccessSignature(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates an IoT Hub device client from the given
                         shared access signature using the given transport type.
    syntax:
      content: >-
        static function fromSharedAccessSignature(sharedAccessSignature: string,
        transportCtor: any)
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: |-
            A shared access signature which encapsulates "device
                                             connect" permissions on an IoT hub.
        - id: transportCtor
          type:
            - any
          description: ''
      return:
        type:
          - azure-iot-device - v1.12.1.Client
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.getBlobSharedAccessSignature_1
    name: getBlobSharedAccessSignature(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The `getBlobSharedAccessSignature` gets the linked storage account SAS
      Token from IoT Hub
    syntax:
      content: 'function getBlobSharedAccessSignature(blobName: string)'
      parameters:
        - id: blobName
          type:
            - string
          description: ''
      return:
        type:
          - Promise<UploadParams>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.getBlobSharedAccessSignature
    name: 'getBlobSharedAccessSignature(string, Callback<UploadParams>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The `getBlobSharedAccessSignature` gets the linked storage account SAS
      Token from IoT Hub
    syntax:
      content: >-
        function getBlobSharedAccessSignature(blobName: string, callback:
        Callback<UploadParams>)
      parameters:
        - id: blobName
          type:
            - string
          description: >-
            The name to use for the blob that will be created with the content
            of the stream.
        - id: callback
          type:
            - Callback<UploadParams>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.getTwin_1
    name: getTwin()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getTwin()
      parameters: []
      return:
        type:
          - Promise<azure-iot-device - v1.12.1.Twin>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.getTwin
    name: getTwin(Callback<Twin>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTwin(done: Callback<Twin>)'
      parameters:
        - id: done
          type:
            - Callback<azure-iot-device - v1.12.1.Twin>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.listenerCount
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - EventEmitter
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.notifyBlobUploadStatus_1
    name: 'notifyBlobUploadStatus(string, boolean, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The `notifyBlobUploadStatus` method sends IoT Hub the result of a blob
      upload.
    syntax:
      content: >-
        function notifyBlobUploadStatus(correlationId: string, isSuccess:
        boolean, statusCode: number, statusDescription: string)
      parameters:
        - id: correlationId
          type:
            - string
          description: ''
        - id: isSuccess
          type:
            - boolean
          description: ''
        - id: statusCode
          type:
            - number
          description: ''
        - id: statusDescription
          type:
            - string
          description: ''
      return:
        type:
          - Promise<void>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.notifyBlobUploadStatus
    name: 'notifyBlobUploadStatus(string, boolean, number, string, ErrorCallback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The `notifyBlobUploadStatus` method sends IoT Hub the result of a blob
      upload.
    syntax:
      content: >-
        function notifyBlobUploadStatus(correlationId: string, isSuccess:
        boolean, statusCode: number, statusDescription: string, callback:
        ErrorCallback)
      parameters:
        - id: correlationId
          type:
            - string
          description: >-
            An id for correlating a upload status to a specific blob. Generated
            during the call to `getBlobSharedAccessSignature`.
        - id: isSuccess
          type:
            - boolean
          description: >-
            The success or failure status from the storage blob operation
            result.
        - id: statusCode
          type:
            - number
          description: The HTTP status code associated with the storage blob result.
        - id: statusDescription
          type:
            - string
          description: The description of the HTTP status code.
        - id: callback
          type:
            - ErrorCallback
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.on
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.once
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.onDeviceMethod
    name: >-
      onDeviceMethod(string, (request: DeviceMethodRequest, response:
      DeviceMethodResponse) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: Registers a callback for a method named `methodName`.
    syntax:
      content: >-
        function onDeviceMethod(methodName: string, callback: (request:
        DeviceMethodRequest, response: DeviceMethodResponse) => void)
      parameters:
        - id: methodName
          type:
            - string
          description: Name of the method that will be handled by the callback
        - id: callback
          type:
            - >-
              (request: DeviceMethodRequest, response: DeviceMethodResponse) =>
              void
          description: >
            Function that shall be called whenever a method request for the
            method called `methodName` is received.
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.open_1
    name: open()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function open()
      parameters: []
      return:
        type:
          - Promise<Connected>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.open
    name: open(Callback<Connected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function open(openCallback: Callback<Connected>)'
      parameters:
        - id: openCallback
          type:
            - Callback<Connected>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.prependListener
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.prependOnceListener
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.reject_1
    name: reject(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageRejected>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.reject
    name: 'reject(Message, Callback<MessageRejected>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function reject(message: Message, rejectCallback:
        Callback<MessageRejected>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: rejectCallback
          type:
            - Callback<MessageRejected>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.sendEvent_1
    name: sendEvent(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEvent(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.sendEvent
    name: 'sendEvent(Message, Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendEvent(message: Message, sendEventCallback:
        Callback<MessageEnqueued>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: sendEventCallback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.sendEventBatch_1
    name: 'sendEventBatch(Message[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEventBatch(messages: Message[])'
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.sendEventBatch
    name: 'sendEventBatch(Message[], Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendEventBatch(messages: Message[], sendEventBatchCallback:
        Callback<MessageEnqueued>)
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
        - id: sendEventBatchCallback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.setOptions_1
    name: setOptions(DeviceClientOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setOptions(options: DeviceClientOptions)'
      parameters:
        - id: options
          type:
            - azure-iot-device - v1.12.1.DeviceClientOptions
          description: ''
      return:
        type:
          - Promise<TransportConfigured>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.setOptions
    name: 'setOptions(DeviceClientOptions, Callback<TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setOptions(options: DeviceClientOptions, done:
        Callback<TransportConfigured>)
      parameters:
        - id: options
          type:
            - azure-iot-device - v1.12.1.DeviceClientOptions
          description: ''
        - id: done
          type:
            - Callback<TransportConfigured>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.setRetryPolicy
    name: setRetryPolicy(RetryPolicy)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets the retry policy used by the client on all operations. The default is
      [ExponentialBackoffWithJitter](xref:azure-iot-common.ExponentialBackoffWithJitter).
    syntax:
      content: 'function setRetryPolicy(policy: RetryPolicy)'
      parameters:
        - id: policy
          type:
            - RetryPolicy
          description: |
            The retry policy that should be used for all future operations.
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.setTransportOptions_1
    name: setTransportOptions(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTransportOptions(options: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
      return:
        type:
          - Promise<TransportConfigured>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.setTransportOptions
    name: 'setTransportOptions(any, Callback<TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setTransportOptions(options: any, done:
        Callback<TransportConfigured>)
      parameters:
        - id: options
          type:
            - any
          description: ''
        - id: done
          type:
            - Callback<TransportConfigured>
          description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.updateSharedAccessSignature
    name: >-
      updateSharedAccessSignature(string,
      Callback<SharedAccessSignatureUpdated>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSharedAccessSignature(sharedAccessSignature: string,
        updateSasCallback?: Callback<SharedAccessSignatureUpdated>)
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: ''
        - id: updateSasCallback
          type:
            - Callback<SharedAccessSignatureUpdated>
          description: ''
          optional: true
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.uploadToBlob_1
    name: 'uploadToBlob(string, Stream, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The `uploadToBlob` method uploads a stream to a blob.
    syntax:
      content: >-
        function uploadToBlob(blobName: string, stream: Stream, streamLength:
        number)
      parameters:
        - id: blobName
          type:
            - string
          description: ''
        - id: stream
          type:
            - Stream
          description: ''
        - id: streamLength
          type:
            - number
          description: ''
      return:
        type:
          - Promise<void>
        description: ''
    package: azure-iot-device - v1
  - uid: azure-iot-device - v1.12.1.Client.uploadToBlob
    name: 'uploadToBlob(string, Stream, number, ErrorCallback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The `uploadToBlob` method uploads a stream to a blob.
    syntax:
      content: >-
        function uploadToBlob(blobName: string, stream: Stream, streamLength:
        number, callback: ErrorCallback)
      parameters:
        - id: blobName
          type:
            - string
          description: >-
            The name to use for the blob that will be created with the content
            of the stream.
        - id: stream
          type:
            - Stream
          description: The data to that should be uploaded to the blob.
        - id: streamLength
          type:
            - number
          description: The size of the data to that should be uploaded to the blob.
        - id: callback
          type:
            - ErrorCallback
          description: ''
    package: azure-iot-device - v1
references:
  - uid: azure-iot-device - v1.12.1.DeviceTransport
    name: DeviceTransport
    spec.typeScript:
      - name: DeviceTransport
        fullName: DeviceTransport
        uid: azure-iot-device - v1.12.1.DeviceTransport
  - uid: Callback<azure-iot-device - v1.12.1.Twin>
    name: Twin>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device - v1.12.1.Twin
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device - v1.12.1.Twin>
    name: Twin>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device - v1.12.1.Twin
      - name: '>'
        fullName: '>'
  - uid: azure-iot-device - v1.12.1.DeviceClientOptions
    name: DeviceClientOptions
    spec.typeScript:
      - name: DeviceClientOptions
        fullName: DeviceClientOptions
        uid: azure-iot-device - v1.12.1.DeviceClientOptions
  - uid: azure-iot-device - v1.12.1.Client
    name: Client
    spec.typeScript:
      - name: Client
        fullName: Client
        uid: azure-iot-device - v1.12.1.Client
